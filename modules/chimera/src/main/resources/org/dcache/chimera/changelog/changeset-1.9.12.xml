<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
     xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
     http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet author="tigran" id="7.1" dbms="postgresql">
        <createProcedure>
            DROP TRIGGER IF EXISTS tgr_insertACL ON t_dirs;

            CREATE OR REPLACE FUNCTION f_insertACL() RETURNS trigger AS $$
            DECLARE
                msk INTEGER;
                flag INTEGER;
                rstype INTEGER;
                id character varying(36);
                parentid character varying(36);
            BEGIN
                IF (TG_OP = 'INSERT') THEN
                    msk := 0;
                    SELECT INTO rstype itype FROM t_inodes WHERE ipnfsid = NEW.ipnfsid;

                    IF rstype = 32768  THEN
                        id := NEW.ipnfsid;
                        parentid := NEW.iparent;
                        rstype := 1;    -- inserted object is a file
                        flag := 1;      -- check flags for 'f' bit
                        msk := 11;      -- mask contains 'o','d' and 'f' bits
                    ELSIF (rstype = 16384 AND NEW.iname = '..') THEN
                        id := NEW.iparent;
                        parentid := NEW.ipnfsid;
                        rstype := 0;    -- inserted object is a directory
                        flag := 3;      -- check flags for 'd' and 'f' bits
                        msk := 8;       -- mask contains 'o' bit
                    END IF;

                    IF msk > 0 THEN

                        INSERT INTO t_acl
                        SELECT id, rstype, type, (flags | msk) # msk, access_msk, who, who_id, address_msk, ace_order
                        FROM t_acl
                        WHERE  rs_id = parentid AND ((flags &amp; flag) > 0);
                    END IF;
                END IF;
                RETURN NULL;
            END;
            $$ LANGUAGE plpgsql;

            CREATE TRIGGER  tgr_insertACL AFTER INSERT ON  t_dirs FOR EACH ROW EXECUTE PROCEDURE  f_insertACL();
        </createProcedure>
    </changeSet>

    <changeSet id="8" author="tigran">
        <!--
            change pnfsid colum type to support old IDs (length < 36)
        -->
        <modifyDataType tableName="t_inodes" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_dirs" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_dirs" columnName="iparent" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_inodes_data" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_inodes_checksum" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_acl" columnName="rs_id" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_1" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_2" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_3" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_4" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_5" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_6" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_level_7" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_access_latency" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_retention_policy" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_locationinfo" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_locationinfo_trash" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_storageinfo" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_locationinfo_trash" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_tags" columnName="ipnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_tags" columnName="itagid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="t_tags_inodes" columnName="itagid" newDataType="VARCHAR(36)" />
    </changeSet>
</databaseChangeLog>
