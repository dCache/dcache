<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder/>
    <context:annotation-config/>

    <!-- Convert properties with multiple values separated by comma into an array of strings:
         key=value1,value2,value3 : String[] {value1, value2, value3}
      -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor"/>
            </map>
        </property>
    </bean>

    <!--
         DCACHE CELL COMMUNICATION
         =====================================================================================
      -->

    <bean id="noroutetocell" class="org.dcache.cells.LogNoRouteToCellExceptionReceiver">
        <description>Undeliverable message logger</description>
        <property name="excludedDestinations"
                  value="${srm.loginbroker.update-topic}"/>
    </bean>

    <bean id="gPlazmaStub" class="org.dcache.cells.CellStub">
        <description>gPlazma communication stub</description>
        <property name="destination" value="${srm.service.gplazma}"/>
        <property name="timeout" value="${srm.service.gplazma.timeout}" />
        <property name="timeoutUnit" value="${srm.service.gplazma.timeout.unit}" />
    </bean>

    <bean id="srmManagerStub" class="org.dcache.cells.CellStub">
        <description>SRM manager communication stub</description>
        <property name="destination" value="${srm.service.srmmanager}"/>
        <property name="timeout" value="${srm.service.srmmanager.timeout}" />
        <property name="timeoutUnit" value="${srm.service.srmmanager.timeout.unit}" />
    </bean>

    <bean id="scheduledExecutor" class="java.util.concurrent.Executors"
          factory-method="newSingleThreadScheduledExecutor"
          destroy-method="shutdown">
        <description>Thread pool for scheduled activities</description>
    </bean>

    <bean id="lb" class="dmg.cells.services.login.LoginBrokerPublisher">
        <description>Registers the door with a LoginBroker</description>
        <property name="executor" ref="scheduledExecutor"/>
        <property name="updateTime" value="${srm.loginbroker.update-period}"/>
        <property name="updateTimeUnit" value="${srm.loginbroker.update-period.unit}"/>
        <property name="updateThreshold" value="${srm.loginbroker.update-threshold}"/>
        <property name="protocolEngine" value="diskCacheV111.srm.dcache.Storage"/>
        <property name="protocolVersion" value="${srm.loginbroker.version}"/>
        <property name="protocolFamilies" value="${srm.loginbroker.family}"/>
        <property name="address" value="#{ T(com.google.common.base.Strings).emptyToNull('${srm.loginbroker.address}') }"/>
        <property name="port" value="${srm.loginbroker.port}"/>
        <property name="topic" value="${srm.loginbroker.update-topic}"/>
        <property name="tags" value="#{ T(com.google.common.base.Splitter).on(',').omitEmptyStrings().splitToList('${srm.loginbroker.tags}') }"/>
        <property name="root" value="${srm.loginbroker.root}"/>
        <property name="readPaths" value="#{ T(java.util.Arrays).asList('/') }"/>
        <property name="writePaths" value="#{ T(java.util.Arrays).asList('/') }"/>
    </bean>

    <bean id="srmHandler" class="diskCacheV111.srm.SrmHandler">
        <property name="pingExtraInfo">
            <bean class="org.dcache.util.configuration.ConfigurationMapFactoryBean">
                <property name="prefix" value="srm.ping-extra-info"/>
            </bean>
        </property>
        <property name="srmManagerStub" ref="srmManagerStub"/>
        <property name="clientDNSLookup" value="${srm.enable.client-dns-lookup}"/>
    </bean>

    <bean id="delegationHandler" class="org.dcache.gridsite.AccessLoggerDelegation">
        <constructor-arg>
          <bean class="org.dcache.gridsite.DelegationHandler">
            <property name="delegationServiceStub" ref="srmManagerStub"/>
            <property name="loginStrategy" ref="cache-login-strategy"/>
          </bean>
        </constructor-arg>
    </bean>

    <bean id="keypair-cache" class="org.dcache.gsi.KeyPairCache">
        <description>Cache of key-pairs to reduce delegation overhead</description>
        <constructor-arg value="${srm.authn.gsi.delegation.cache.lifetime}"/>
        <constructor-arg value="${srm.authn.gsi.delegation.cache.lifetime.unit}"/>
    </bean>

    <bean abstract="true" id="globus-connector" class="org.dcache.util.jetty.ConnectorFactoryBean">
        <property name="server" ref="server"/>

        <property name="host" value="#{ T(com.google.common.base.Strings).emptyToNull('${srm.net.listen}') }"/>
        <property name="backlog" value="${srm.limits.jetty-connector.backlog}"/>
        <property name="idleTimeout" value="${srm.limits.jetty-connector.idle-time.max}"/>
        <property name="idleTimeoutUnit" value="${srm.limits.jetty-connector.idle-time.max.unit}"/>
        <property name="acceptors" value="${srm.limits.jetty-connector.acceptors}"/>

        <property name="needClientAuth" value="false"/>
        <property name="wantClientAuth" value="true"/>
        <property name="cipherFlags" value="${srm.authn.ciphers}"/>

        <property name="caPath" value="${srm.authn.capath}"/>
        <property name="caPathTimeout" value="${srm.authn.capath.refresh}"/>
        <property name="caPathTimeoutUnit" value="${srm.authn.capath.refresh.unit}"/>

        <property name="serverCertificatePath" value="${srm.authn.hostcert.cert}"/>
        <property name="serverKeyPath" value="${srm.authn.hostcert.key}"/>
        <property name="serverCertificateTimeout" value="${srm.authn.hostcert.refresh}"/>
        <property name="serverCertificateTimeoutUnit" value="${srm.authn.hostcert.refresh.unit}"/>

        <property name="namespaceMode" value="${srm.authn.namespace-mode}"/>
        <property name="crlCheckingMode" value="${srm.authn.crl-mode}"/>
        <property name="ocspCheckingMode" value="${srm.authn.ocsp-mode}"/>

        <property name="proxyConnectionEnabled" value="${srm.enable.proxy-protocol}"/>

        <property name="keyPairCache" ref="keypair-cache"/>
    </bean>

    <bean id="thread-pool" class="org.eclipse.jetty.util.thread.QueuedThreadPool">
        <!-- Note that Jetty manages the lifecycle of this thread pool -->
        <description>Thread pool used by Jetty for request processing</description>

        <constructor-arg value="${srm.limits.jetty.threads.max}"/>
        <constructor-arg value="${srm.limits.jetty.threads.min}"/>
        <constructor-arg
                value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                     ${srm.limits.jetty.threads.idle-time.max},
                     '${srm.limits.jetty.threads.idle-time.max.unit}')}" />
        <constructor-arg>
            <bean class="org.eclipse.jetty.util.BlockingArrayQueue">
                <constructor-arg value="${srm.limits.jetty.threads.queued.max}"/>
            </bean>
        </constructor-arg>

        <property name="name" value="jetty-srm"/>
    </bean>

    <bean id="server" class="org.eclipse.jetty.server.Server"
          init-method="start" destroy-method="stop">
        <description>Jetty server hosting the SRM web application</description>

        <constructor-arg ref="thread-pool"/>

        <property name="stopTimeout" value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                         ${srm.limits.jetty.graceful-shutdown},
                         '${srm.limits.jetty.graceful-shutdown.unit}')}"/>

        <property name="connectors">
            <list>
                <bean parent="globus-connector">
                    <description>GSI interface</description>
                    <property name="port" value="${srm.net.port}"/>
                    <property name="protocol" value="GSI"/>
                    <property name="usingLegacyClose" value="${srm.enable.legacy-close}"/>
                </bean>

                <bean parent="globus-connector">
                    <description>SSL interface</description>
                    <property name="port" value="${srm.net.ssl-port}"/>
                    <property name="protocol" value="TLS"/>
                </bean>
            </list>
        </property>

        <property name="handler">
            <bean id="authhandler" class="org.dcache.http.AuthenticationHandler">
                <property name="handler" ref="authorised-handlers"/>
                <property name="loginStrategy" ref="cache-login-strategy"/>
                <property name="readOnly" value="false"/>
                <property name="enableBasicAuthentication" value="false"/>
                <property name="enableSpnegoAuthentication" value="false"/>
                <property name="realm" value="${srm.authn.realm}"/>
                <property name="acceptBearerTokenUnencrypted" value="false"/>
            </bean>
        </property>

        <property name="beans">
            <list>
                <bean class="org.eclipse.jetty.server.LowResourceMonitor">
                    <constructor-arg ref="server"/>
                    <property name="lowResourcesIdleTimeout"
                              value="#{T(java.util.concurrent.TimeUnit).MILLISECONDS.convert(
                                  ${srm.limits.jetty-connector.low-resource.max.idle-time},
                                 '${srm.limits.jetty-connector.low-resource.max.idle-time.unit}')}"/>
                    <property name="maxLowResourcesTime" value="180000"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="cache-login-strategy" class="org.dcache.auth.CachingLoginStrategy">
        <description>Processes mapping requests</description>
	<constructor-arg index="0" ref="union-login-strategy" />
	<constructor-arg index="1" value="${srm.service.gplazma.cache.size}" />
	<constructor-arg index="2" value="${srm.service.gplazma.cache.timeout}" />
	<constructor-arg index="3" value="${srm.service.gplazma.cache.timeout.unit}" />
    </bean>

    <bean id="union-login-strategy" class="org.dcache.auth.UnionLoginStrategy">
        <description>Processes login requests</description>
	<property name="loginStrategies">
            <list>
                <bean class="org.dcache.auth.MacaroonLoginStrategy">
		    <constructor-arg index="0" ref="macaroon-processor"/>
		</bean>
		<bean class="org.dcache.services.login.RemoteLoginStrategy">
		    <property name="cellStub" ref="gPlazmaStub"/>
		</bean>
            </list>
	</property>
	<property name="fallbackToAnonymous" value="false"/>
	<property name="anonymousAccess" value="NONE"/>
    </bean>


    <bean id="macaroon-processor" class="org.dcache.macaroons.MacaroonProcessor">
        <description>Facade for handling macaroon creation and verification</description>
        <property name="secretHandler">
            <bean id="macaroon-secret-handler" class="org.dcache.macaroons.ZookeeperSecretHandler">
                <property name="executor" ref="scheduledExecutor"/>
                <property name="zookeeperSecretStorage">
                    <bean class="org.dcache.macaroons.ZookeeperSecretStorage"/>
                </property>
                <property name="expirationPeriod"
                          value="${srm.macaroons.expired-removal-period}"/>
                <property name="expirationPeriodUnit"
                          value="${srm.macaroons.expired-removal-period.unit}"/>
            </bean>
        </property>
    </bean>


    <bean id="authorised-handlers" class="org.eclipse.jetty.server.handler.HandlerList">
        <property name="handlers">
            <list>
                <bean class="org.eclipse.jetty.webapp.WebAppContext">
                    <property name="contextPath" value="/srm"/>
                    <property name="war" value="${dcache.paths.share}/srm-webapp"/>
                    <property name="configurationClasses">
                        <list>
                            <value>org.eclipse.jetty.webapp.WebInfConfiguration</value>
                            <value>org.eclipse.jetty.plus.webapp.EnvConfiguration</value>
                            <value>org.eclipse.jetty.plus.webapp.PlusConfiguration</value>
                            <value>org.eclipse.jetty.webapp.WebXmlConfiguration</value>
                        </list>
                    </property>
                    <property name="attributes">
                        <bean class="org.dcache.util.jetty.ImmutableAttributesMap">
                            <constructor-arg>
                                <map>
                                    <entry key="#{ T(org.dcache.srm.util.Axis).ATTRIBUTE_NAME_SRM_SERVER_V2 }">
                                        <bean class="diskCacheV111.srm.SrmHandlerAdapter">
                                            <constructor-arg ref="srmHandler"/>
                                        </bean>
                                    </entry>
                                    <entry key="#{ T(org.dcache.srm.util.Axis).ATTRIBUTE_NAME_DELEGATION }"
                                           value-ref="delegationHandler"/>
                                </map>
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>

                <bean class="org.eclipse.jetty.server.handler.DefaultHandler"/>
            </list>
        </property>
    </bean>
</beans>
