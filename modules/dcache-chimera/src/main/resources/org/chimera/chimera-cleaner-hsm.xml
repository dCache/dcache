<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ dCache - http://www.dcache.org/
  ~
  ~ Copyright (C) 2022 Deutsches Elektronen-Synchrotron
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder/>
    <context:annotation-config/>

    <!--
        Convert properties with multiple values separated by comma into an array of strings:
        key=value1,value2,value3 : String[] {value1, value2, value3}
    -->

    <bean id="scheduled-thread-pool"
          class="java.util.concurrent.ScheduledThreadPoolExecutor"
          destroy-method="shutdownNow">
        <description>Thread pool for scheduled activities</description>
        <constructor-arg value="${cleaner-hsm.limits.threads}"/>
    </bean>

    <bean id="data-source" class="org.dcache.db.AlarmEnabledDataSource" destroy-method="close">
        <description>Database connection pool</description>
        <constructor-arg value="${cleaner-hsm.db.url}"/>
        <constructor-arg value="${cleaner-hsm.cell.name}"/>
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariDataSource">
                <constructor-arg>
                    <bean class="com.zaxxer.hikari.HikariConfig">
                        <constructor-arg>
                            <bean class="org.dcache.util.configuration.ConfigurationPropertiesFactoryBean">
                                <property name="prefix" value="cleaner-hsm.db.hikari-properties"/>
                                <property name="staticEnvironment">
                                    <map>
                                        <entry key="jdbcUrl" value="${cleaner-hsm.db.url}"/>
                                        <entry key="username" value="${cleaner-hsm.db.user}"/>
                                        <entry key="password" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${cleaner-hsm.db.password.file}', '${cleaner-hsm.db.url}', '${cleaner-hsm.db.user}', '${cleaner-hsm.db.password}') }"/>
                                        <entry key="minimumIdle" value="${cleaner-hsm.db.connections.idle}"/>
                                        <entry key="maximumPoolSize" value="${cleaner-hsm.db.connections.max}"/>
                                    </map>
                                </property>
                            </bean>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="pool-stub" class="org.dcache.cells.CellStub">
        <description>Pool communication stub</description>
        <property name="timeout" value="${cleaner-hsm.service.pool.timeout}"/>
        <property name="timeoutUnit" value="${cleaner-hsm.service.pool.timeout.unit}"/>
    </bean>

    <bean id="pool-Information-Base" class="org.dcache.chimera.namespace.PoolInformationBase">
        <description>PoolInformationBase</description>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor"/>
            </map>
        </property>
    </bean>

    <bean id="cleaner-hsm" class="org.dcache.chimera.namespace.HsmCleaner"
          init-method="init" destroy-method="shutdown">
        <description>Hsm Cleaner removes files from HSM</description>
        <property name="poolStub" ref="pool-stub"/>
        <property name="dataSource" ref="data-source"/>
        <property name="executor" ref="scheduled-thread-pool"/>
        <property name="poolInformationBase" ref="pool-Information-Base"/>
        <property name="refreshInterval" value="${cleaner-hsm.limits.period}"/>
        <property name="refreshIntervalUnit" value="${cleaner-hsm.limits.period.unit}"/>
        <property name="gracePeriod"
          value="#{ T(org.dcache.util.TimeUtils).durationOf('${cleaner-hsm.service.grace-period}', '${cleaner-hsm.service.grace-period.unit}')}"/>
        <property name="maxFilesPerRequest" value="${cleaner-hsm.limits.batch-size}"/>
        <property name="maxCachedDeleteLocations" value="${cleaner-hsm.limits.max-cached-locations}"/>
        <property name="hsmTimeout" value="${cleaner-hsm.service.pool.timeout}"/>
        <property name="hsmTimeoutUnit" value="${cleaner-hsm.service.pool.timeout.unit}"/>
    </bean>

    <bean id="ha-service-leadership-manager" class="org.dcache.cells.HAServiceLeadershipManager"
      init-method="initZkLeaderListener" destroy-method="shutdown">
        <description>Coordinates which hsm cleaner is active</description>
        <constructor-arg value="cleaner-hsm"/>
        <constructor-arg value="service"/>
        <property name="leadershipListener">
            <ref bean="leaderlistener-group"/>
        </property>
    </bean>

    <bean id="leaderlistener-group" class="org.dcache.cells.LeadershipListenerGroup">
        <description>Propagates leadership change notifications to managed listeners</description>
        <property name="leaderElectionAwareComponents">
            <set>
                <ref bean="cleaner-hsm"/>
            </set>
        </property>
    </bean>

</beans>
