<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
	<preConditions>
		<dbms type="postgresql"/>
	</preConditions>
     <changeSet id="5.0.0" author="arossi" context="billing">
        <comment>
            drop the costinfo trigger, tables and function, as these are no longer
            deemed useful; this can be done safely as they have never been used
        </comment>
        <sql splitStatements="false">
            DROP TRIGGER tgr_update_costinfo_daily ON costinfo;
        </sql>
        <sql splitStatements="false">
            DROP FUNCTION f_update_costinfo_daily();
        </sql>
        <dropTable tableName="costinfo_daily"/>
        <dropTable tableName="costinfo"/>
    </changeSet>
    <!-- VARCHAR ADJUSTMENTS, AGAIN.  The original changeset was discovered to have an off-by-one error in it -->
    <changeSet author="arossi" id="5.1.0" context="billing" failOnError="false">
        <sql splitStatements="false">
            INSERT INTO billinginfo (errormessage)
            VALUES ('000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006');
        </sql>
    </changeSet>
    <changeSet author="arossi" id="5.1.1" context="billing">
        <!-- If the insert (5.1.0) worked, the database was probably already initialized with VARCHAR unlimited;
             so this check runs the changeset only if select turns 0, i.e., no insert occurred -->
        <preConditions onError="CONTINUE" onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from billinginfo where errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006'</sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            DELETE FROM billinginfo
            WHERE errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006';
        </sql>
        <modifyDataType tableName="billinginfo" columnName="pnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="billinginfo" columnName="errormessage" newDataType="VARCHAR(8000)" />
    </changeSet>
    <changeSet author="arossi" id="5.1.2" context="billing" failOnError="false">
        <sql splitStatements="false">
            INSERT INTO doorinfo (errormessage)
            VALUES ('000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006');
        </sql>
    </changeSet>
    <changeSet author="arossi" id="5.1.3" context="billing">
        <!-- If the insert (5.1.2) worked, the database was probably already initialized with VARCHAR unlimited;
             so this check runs the changeset only if select turns 0, i.e., no insert occurred -->
        <preConditions onError="CONTINUE" onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from doorinfo where errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006'</sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            DELETE FROM doorinfo
            WHERE errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006';
        </sql>
        <modifyDataType tableName="doorinfo" columnName="pnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="doorinfo" columnName="errormessage" newDataType="VARCHAR(8000)" />
        <modifyDataType tableName="doorinfo" columnName="path" newDataType="VARCHAR(8000)" />
    </changeSet>
    <changeSet author="arossi" id="5.1.4" context="billing" failOnError="false">
        <sql splitStatements="false">
            INSERT INTO storageinfo (errormessage)
            VALUES ('000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006');
        </sql>
    </changeSet>
    <changeSet author="arossi" id="5.1.5" context="billing">
        <!-- If the insert (5.1.4) worked, the database was probably already initialized with VARCHAR unlimited;
             so this check runs the changeset only if select turns 0, i.e., no insert occurred -->
        <preConditions onError="CONTINUE" onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from storageinfo where errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006'</sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            DELETE FROM storageinfo
            WHERE errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006';
        </sql>
        <modifyDataType tableName="storageinfo" columnName="pnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="storageinfo" columnName="errormessage" newDataType="VARCHAR(8000)" />
    </changeSet>
    <changeSet author="arossi" id="5.1.6" context="billing" failOnError="false">
        <sql splitStatements="false">
            INSERT INTO hitinfo (errormessage)
            VALUES ('000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006');
        </sql>
    </changeSet>
    <changeSet author="arossi" id="5.1.7" context="billing">
        <!-- If the insert (5.1.6) worked, the database was probably already initialized with VARCHAR unlimited;
             so this check runs the changeset only if select turns 0, i.e., no insert occurred -->
        <preConditions onError="CONTINUE" onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from hitinfo where errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006'</sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            DELETE FROM hitinfo
            WHERE errormessage = '000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006000000000700000000080000000009000000000C000000000100000000020000000003000000000400000000050000000006';
        </sql>
        <modifyDataType tableName="hitinfo" columnName="pnfsid" newDataType="VARCHAR(36)" />
        <modifyDataType tableName="hitinfo" columnName="errormessage" newDataType="VARCHAR(8000)" />
    </changeSet>
</databaseChangeLog>