<?xml version="1.0" encoding="UTF-8"?>

<!--+
    |  The billing components that are common between dCache instances that make
    |  use of database storage and those that don't.
    +-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="properties"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <description>Imported configuration data</description>
    <property name="location" value="arguments:"/>
  </bean>

  <bean id="poolmanager-stub" class="org.dcache.cells.CellStub">
    <description>Pool manager communication stub</description>
    <property name="destination" value="${billing.service.poolmanager}"/>
    <property name="timeout" value="${billing.service.poolmanager.timeout}"/>
    <property name="timeoutUnit" value="${billing.service.poolmanager.timeout.unit}"/>
  </bean>

  <bean id="billingcell"
    class="org.dcache.services.billing.cells.BillingCell">
    <property name="logsDir" value="${billing.text.dir}"/>
    <property name="enableTxt" value="${billing.enable.text}"/>
    <property name="flatTextDir" value="${billing.text.flat-dir}"/>
    <property name="poolManagerStub" ref="poolmanager-stub"/>
  </bean>

  <beans profile="db-false">
    <bean id="histogram-request-receiver" class="org.dcache.services.billing.cells.receivers.NOPHistogramRequestReceiver">
        <!-- no connection to database; returns failure on request -->
    </bean>
  </beans>

  <!-- Set of beans instantiated if database is enabled -->
  <beans profile="db-true">
    <bean id="jdbc-billing-info-access" class="org.dcache.services.billing.db.impl.datanucleus.DataNucleusBillingInfo"
          init-method="initialize" destroy-method="close">
      <property name="jdbcUrl" value="${billing.db.url}"/>
      <property name="jdbcDriver" value="${billing.db.driver}"/>
      <property name="jdbcUser" value="${billing.db.user}"/>
      <property name="jdbcPassword" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${billing.db.password.file}', '${billing.db.url}', '${billing.db.user}', '${billing.db.password}') }"/>
      <property name="propertiesPath" value="${billing.db.config.path}"/>
      <property name="partitionCount" value="${billing.db.connections.partition-count}"/>
      <property name="maxConnectionsPerPartition" value="${billing.db.connections.max-per-partition}"/>
      <property name="minConnectionsPerPartition" value="${billing.db.connections.min-per-partition}"/>
      <property name="delegateType" value="${billing.db.inserts.queue-delegate.type}"/>
      <property name="maxQueueSize" value="${billing.db.inserts.max-queue-size}"/>
      <property name="maxBatchSize" value="${billing.db.inserts.max-batch-size}"/>
      <property name="dropMessagesAtLimit" value="${billing.db.inserts.drop-messages-at-limit}"/>
    </bean>

    <bean id="histogram-service" class="org.dcache.services.billing.histograms.data.JDOTimeFrameHistogramDataService">
      <property name="access" ref="jdbc-billing-info-access"/>
    </bean>

    <bean id="histogram-request-receiver" class="org.dcache.services.billing.cells.receivers.HistogramRequestReceiver">
      <property name="service" ref="histogram-service"/>
    </bean>

    <bean id="billing-info-message-receiver" class="org.dcache.services.billing.cells.receivers.BillingInfoMessageReceiver">
      <property name="access" ref="jdbc-billing-info-access"/>
    </bean>

    <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
      <description>Database schema manager</description>
      <property name="dataSource">
        <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          <property name="driverClassName" value="${billing.db.driver}"/>
          <property name="url" value="${billing.db.url}"/>
          <property name="username" value="${billing.db.user}"/>
          <property name="password"
                    value="#{ T(diskCacheV111.util.Pgpass).getPassword('${billing.db.password.file}', '${billing.db.url}', '${billing.db.user}', '${billing.db.password}') }"/>
        </bean>
      </property>
      <property name="changeLog" value="classpath:${billing.db.schema.changelog}"/>
      <property name="shouldUpdate" value="${billing.db.schema.auto}"/>
    </bean>
  </beans>
</beans>
