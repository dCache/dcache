<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd ">

    <context:annotation-config/>
    <context:property-placeholder/>

    <!-- Convert properties with multiple values separated by comma into an array of strings:
     key=value1,value2,value3 : String[] {value1, value2, value3}
     -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor"/>
            </map>
        </property>
    </bean>

    <bean id="noroutetocell" class="org.dcache.cells.LogNoRouteToCellExceptionReceiver">
        <description>Undeliverable message logger</description>
        <property name="excludedDestinations" value="${admin.loginbroker.request-topic}"/>
    </bean>

    <bean id="gplazma" class="org.dcache.cells.CellStub">
        <description>gPlazma communication stub</description>
        <property name="destination" value="${admin.service.gplazma}"/>
        <property name="timeout"     value="${admin.service.gplazma.timeout}"/>
        <property name="timeoutUnit" value="${admin.service.gplazma.timeout.unit}"/>
    </bean>

    <bean id="poolmanager" class="org.dcache.cells.CellStub">
        <property name="destination" value="${admin.service.poolmanager}"/>
        <property name="timeout" value="${admin.service.poolmanager.timeout}"/>
        <property name="timeoutUnit" value="${admin.service.poolmanager.timeout.unit}"/>
    </bean>

    <bean id="spacemanager" class="org.dcache.cells.CellStub">
        <property name="destination" value="${admin.service.spacemanager}"/>
        <property name="timeout" value="${admin.service.spacemanager.timeout}"/>
        <property name="timeoutUnit" value="${admin.service.spacemanager.timeout.unit}"/>
    </bean>

    <bean id="pnfsmanager" class="org.dcache.cells.CellStub">
        <property name="destination" value="${admin.service.pnfsmanager}"/>
        <property name="timeout" value="${admin.service.pnfsmanager.timeout}"/>
        <property name="timeoutUnit" value="${admin.service.pnfsmanager.timeout.unit}"/>
    </bean>

    <bean id="acm" class="org.dcache.cells.CellStub">
        <property name="destination" value="${admin.service.acm}"/>
        <property name="timeout" value="${admin.service.acm.timeout}"/>
        <property name="timeoutUnit" value="${admin.service.acm.timeout.unit}"/>
    </bean>

    <bean id="login-strategy"
	  class="org.dcache.services.login.RemoteLoginStrategy">
        <description>Processes login requests</description>
        <property name="cellStub" ref="gplazma"/>
    </bean>

    <bean id="shell-factory" class="org.dcache.services.ssh2.AdminShellFactory">
        <property name="historyFile" value="${admin.paths.history}"/>
        <property name="historySize" value="${admin.history.size}"/>
        <property name="useColor" value="${admin.enable.colors}"/>
        <property name="pnfsManager" ref="pnfsmanager"/>
        <property name="poolManager" ref="poolmanager"/>
        <property name="acm" ref="acm"/>
        <property name="prompt" value="${admin.prompt}"/>
        <property name="listHandler">
            <bean class="org.dcache.util.list.ListDirectoryHandler">
                <constructor-arg>
                    <bean class="diskCacheV111.util.PnfsHandler">
                        <constructor-arg ref="pnfsmanager"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="command-factory" class="org.dcache.services.ssh2.DirectCommandFactory">
        <property name="pnfsManager" ref="pnfsmanager"/>
        <property name="poolManager" ref="poolmanager"/>
        <property name="acm" ref="acm"/>
        <property name="prompt" value="${admin.prompt}"/>
        <property name="listHandler">
            <bean class="org.dcache.util.list.ListDirectoryHandler">
                <constructor-arg>
                    <bean class="diskCacheV111.util.PnfsHandler">
                        <constructor-arg ref="pnfsmanager"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="legacy-factory" class="org.dcache.services.ssh2.LegacySubsystemFactory">
        <property name="historyFile" value="${admin.paths.history}"/>
        <property name="historySize" value="${admin.history.size}"/>
        <property name="useColor" value="${admin.enable.colors}"/>
        <property name="prompt" value="${admin.prompt}"/>
    </bean>

    <bean id="ssh2Server" class="org.dcache.services.ssh2.Ssh2Admin">
        <property name="host" value="#{ T(com.google.common.base.Strings).emptyToNull('${admin.net.listen}') }"/>
        <property name="port"               value="${admin.net.port}"/>
        <property name="hostKeys"           value="${admin.paths.host-keys}"/>
        <property name="authorizedKeyList"  value="${admin.paths.authorized-keys}"/>
        <property name="loginStrategy"      ref="login-strategy"/>
        <property name="adminGroupId"       value="${admin.authz.gid}"/>
        <property name="shellFactory"       ref="shell-factory"/>
        <property name="commandFactory"     ref="command-factory"/>
        <property name="subsystemFactories">
            <list>
                <ref bean="legacy-factory"/>
            </list>
        </property>
        <property name="idleTimeout" value="#{T(org.dcache.util.Strings).parseLong('${admin.ssh.idle-timeout}')}" />
        <property name="idleTimeoutUnit" value="${admin.ssh.idle-timeout.unit}" />
	<property name="enabledAuthenticationMechanisms" value="${admin.ssh.authn.enabled}"/>
        <property name="keyTabFile" value="${admin.ssh.authn.kerberos.keytab-file}" />
    </bean>
</beans>
