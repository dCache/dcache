#
#  make sure we don't start if something's
#  not correct.
#
onerror shutdown
#
#set printout default 3
set printout default  all
set printout CellGlue all
#
#  check if the setupFile exists. If yes get it.
#
check -strong setupFile
#
copy file:${setupFile} env:setupFile
#
#
#  Run the setupFile and make the contents
#  to our environment. ( key=value )
#
import env setupFile
#
#   Make sure we got what we need.
#
check -strong poolBase pnfsMount hsmCommand
check -strong vspPort  sshPort
#
#set env ftpBase  ${pnfsMount}/usr
#
#
create diskCacheV111.cells.PnfsManager PnfsManager \
            "${pnfsMount} diskCacheV111.util.OSMInfoExtractor"
#
create diskCacheV111.cells.PoolManager2 PoolManager
#
create diskCacheV111.cells.DebugCommander debug
#
create dmg.cells.services.login.LoginManager FTP \
            "${ftpPort} \
             diskCacheV111.cells.FTPDoor2 \
             -prot=raw \
             -root=${ftpBase}"
#
create dmg.cells.services.login.LoginManager Vsp \
            "${vspPort} \
             diskCacheV111.cells.VspDoor \
             -prot=telnet -localOk  "
#
#create diskCacheV111.cells.Pool pool-a \
#            "${poolBase}/pool-a -hsmCommand=${hsmCommand}"

#copy file:${poolBase}/pool-b/setup context:pool-bSetupX

define context pool-bSetup endDefine
   set wakeup cleaning 15
   set wakeup flushing 60
   set maxDisk 12800000000
#   exec context pool-bSetupX
endDefine
#
#
onerror continue
copy file:${poolList} context:poolList
exec context poolList
#
#create diskCacheV111.pools.MultiProtocolPool pool-b \
#            "${poolBase}/pool-b \
#            -hsmCommand=${hsmCommand} \
#            -hsmCommandInfo=${hsmCommandInfo} \
#            -write \
#            any 2 \
#            MAIN:raw 2"
#create diskCacheV111.pools.MultiProtocolPool pool-a \
#            "${poolBase}/pool-a \
#            -hsmCommand=${hsmCommand} \
#            -hsmCommandInfo=${hsmCommandInfo} \
#            MAIN:raw 4"
#
#   the rest is the ssh control path.
#   The current setup allows localhost login
#   without password. The 'server_key' and the
#   'host_key' are assumed to be in the .../jobs'
#   directory .
#
#    ssh-keygen -b  768 -f ./server_key -N ""
#    ssh-keygen -b 1024 -f ./host_key   -N ""
#
#    server_key :  768 bits
#    host_key   : 1024 bits
#
set context serverKeyFile     ${keyBase}/server_key
set context hostKeyFile       ${keyBase}/host_key
set env     securityCell      acm
set context userPasswordFile  cell:${securityCell}
#
#
create dmg.cells.services.login.SshKeyManager    skm

create dmg.cells.services.login.LoginManager slm \
      "${sshPort}  \
       dmg.cells.services.StreamLoginCell \
       -prot=ssh -auth=dmg.cells.services.login.SshSAuth_X"

