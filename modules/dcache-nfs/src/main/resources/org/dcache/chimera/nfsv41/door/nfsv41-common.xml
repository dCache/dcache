<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder/>
    <context:annotation-config/>

    <bean id="noroutetocell" class="org.dcache.cells.LogNoRouteToCellExceptionReceiver">
        <description>Undeliverable message logger</description>
        <property name="excludedDestinations" value="${nfs.loginbroker.update-topic}"/>
    </bean>

    <!-- Convert properties with multiple values separated by comma into an array of strings:
         key=value1,value2,value3 : String[] {value1, value2, value3}
     -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor" />
            </map>
        </property>
    </bean>

    <bean id="poolManagerStub" class="org.dcache.cells.CellStub">
        <description>Pool manager cell stub</description>
        <property name="timeout" value="${nfs.service.poolmanager.timeout}"/>
        <property name="timeoutUnit" value="${nfs.service.poolmanager.timeout.unit}"/>
        <property name="destination" value="${nfs.service.poolmanager}"/>
    </bean>

    <bean id="pinManagerStub" class="org.dcache.cells.CellStub">
        <description>Pin manager cell stub</description>
        <property name="timeout" value="${nfs.service.pinmanager.timeout}"/>
        <property name="timeoutUnit" value="${nfs.service.pinmanager.timeout.unit}"/>
        <property name="destination" value="${nfs.service.pinmanager}"/>
    </bean>

    <bean id="pool-stub" class="org.dcache.cells.CellStub">
        <description>Pool communication stub</description>
        <property name="timeout" value="${nfs.service.pool.timeout}"/>
        <property name="timeoutUnit" value="${nfs.service.pool.timeout.unit}"/>
    </bean>

    <bean id="billing-stub" class="org.dcache.cells.CellStub">
        <description>Billing communication stub</description>
        <property name="destination" value="${nfs.service.billing}"/>
    </bean>

    <bean id="scheduled-thread-pool"
        class="java.util.concurrent.Executors"
        factory-method="newScheduledThreadPool"
        destroy-method="shutdown">
        <description>Thread pool for scheduled activities</description>
        <constructor-arg value="1"/>
    </bean>

    <bean id="dataSource" class="org.dcache.db.AlarmEnabledDataSource" destroy-method="close">
        <description>Database connection pool</description>
        <constructor-arg value="${nfs.db.url}"/>
        <constructor-arg value="DCacheAwareJdbcFs"/>
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariDataSource">
                <constructor-arg>
                    <bean class="com.zaxxer.hikari.HikariConfig">
                        <property name="jdbcUrl" value="${nfs.db.url}"/>
                        <property name="username" value="${nfs.db.user}"/>
                        <property name="password" value="#{ T(diskCacheV111.util.Pgpass).getPassword('${nfs.db.password.file}', '${nfs.db.url}', '${nfs.db.user}', '${nfs.db.password}') }"/>
                        <property name="minimumIdle" value="${nfs.db.connections.idle}"/>
                        <property name="maximumPoolSize" value="${nfs.db.connections.max}"/>
                        <property name="autoCommit" value="true"/>
                        <property name="transactionIsolation" value="TRANSACTION_READ_COMMITTED"/>
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="tx-manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <description>Database transaction manager</description>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
        <description>Database schema manager</description>
        <property name="dataSource" ref="dataSource"/>
        <property name="changeLog" value="classpath:${nfs.db.schema.changelog}"/>
        <property name="shouldUpdate" value="${nfs.db.schema.auto}"/>
    </bean>

    <bean id="hazelcast" class="org.dcache.hazelcast.HazelcastService" init-method="start" destroy-method="shutdown"/>

    <bean id="fileSystem" class="org.dcache.chimera.DCacheAwareJdbcFs"
            depends-on="liquibase,hazelcast">
        <description>Chimera Filesystem</description>
        <constructor-arg ref="dataSource" />
        <constructor-arg ref="tx-manager" />
        <property name="pnfsHandler" ref="pnfs"/>
        <property name="poolManagerStub" ref="poolManagerStub"/>
        <property name="pinManagerStub" ref="pinManagerStub"/>
        <property name="billingStub" ref="billing-stub"/>
	<property name="queryPnfsManagerOnRename" value="${nfs.enable.pnfsmanager-query-on-move}"/>
    </bean>

    <bean id="export" class="org.dcache.nfs.ExportFile">
        <description>NFS export file</description>
        <constructor-arg>
            <bean class="java.io.File">
                <constructor-arg value="${nfs.export.file}"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="pnfs" class="diskCacheV111.util.PnfsHandler">
        <description>PNFS manager client module</description>
        <constructor-arg>
            <bean class="dmg.cells.nucleus.CellPath">
                <constructor-arg value="${nfs.service.pnfsmanager}"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="login-stub" class="org.dcache.cells.CellStub">
        <description>Login cell communication stub</description>
        <property name="destination" value="${nfs.service.gplazma}"/>
        <property name="timeout" value="${nfs.service.gplazma.timeout}"/>
        <property name="timeoutUnit" value="${nfs.service.gplazma.timeout.unit}"/>
    </bean>

    <bean id="identity-strategy" class="org.dcache.services.login.RemoteLoginStrategy">
        <description>Processes mapping requests</description>
        <property name="cellStub" ref="login-stub"/>
    </bean>

    <bean id="cache-identity-strategy" class="org.dcache.auth.CachingLoginStrategy">
        <description>Processes mapping requests</description>
        <constructor-arg index="0" ref="identity-strategy" />
        <constructor-arg index="1" value="${nfs.idmap.cache.size}" />
        <constructor-arg index="2" value="${nfs.idmap.cache.timeout}" />
        <constructor-arg index="3" value="${nfs.idmap.cache.timeout.unit}" />
    </bean>

    <bean id="id-mapper" class="org.dcache.chimera.nfsv41.door.StrategyIdMapper">
        <constructor-arg ref="cache-identity-strategy" />
        <constructor-arg value="${nfs.domain}"/>
        <property name="fallBackToNumeric" value="${nfs.idmap.legacy}" />
    </bean>

    <bean id="lb" class="dmg.cells.services.login.LoginBrokerPublisher">
        <description>Notifies LoginBroker </description>
        <property name="executor" ref="scheduled-thread-pool"/>
        <property name="updateTime" value="${nfs.loginbroker.update-period}"/>
        <property name="updateTimeUnit" value="${nfs.loginbroker.update-period.unit}"/>
        <property name="updateThreshold" value="${nfs.loginbroker.update-threshold}"/>
        <property name="protocolEngine" value="org.dcache.chimera.nfsv41.door.NFSv41Door"/>
        <property name="protocolVersion" value="${nfs.loginbroker.version}"/>
        <property name="protocolFamily" value="${nfs.loginbroker.family}"/>
        <property name="address" value="#{ T(com.google.common.base.Strings).emptyToNull('${nfs.loginbroker.address}') }"/>
        <property name="port" value="${nfs.loginbroker.port}"/>
        <property name="topic" value="${nfs.loginbroker.update-topic}"/>
        <property name="tags" value="#{ T(com.google.common.base.Splitter).on(',').omitEmptyStrings().splitToList('${nfs.loginbroker.tags}') }"/>
        <property name="root" value="/"/>
    </bean>

    <bean id="door" class="org.dcache.chimera.nfsv41.door.NFSv41Door"
          init-method="init" destroy-method="destroy" depends-on="rpcbind">
        <description>dCache implementation of NFSv4.1 MDS</description>
        <property name="poolStub" ref="pool-stub"/>
        <property name="poolManagerStub">
            <bean class="org.dcache.poolmanager.PoolManagerStub">
                <property name="handler" ref="pool-manager-handler"/>
                <property name="maximumPoolManagerTimeout" value="${nfs.service.poolmanager.timeout}"/>
                <property name="maximumPoolManagerTimeoutUnit" value="${nfs.service.poolmanager.timeout.unit}"/>
                <property name="maximumPoolTimeout" value="${nfs.service.pool.timeout}"/>
                <property name="maximumPoolTimeoutUnit" value="${nfs.service.pool.timeout.unit}"/>
            </bean>
        </property>
        <property name="billingStub" ref="billing-stub"/>
        <property name="pnfsHandler" ref="pnfs"/>
        <property name="fileSystemProvider" ref="fileSystem"/>
        <property name="ioQueue" value="${nfs.mover.queue}"/>
        <property name="exportFile" ref="export"/>
        <property name="idMapper" ref="id-mapper"/>
        <property name="portNumber" value="${nfs.net.port}"/>
        <property name="versions" value="${nfs.version}"/>
        <property name="enableRpcsecGss" value="${nfs.rpcsec_gss}"/>
        <property name="loginBrokerPublisher" ref="lb"/>
        <property name="vfsCacheConfig" ref="cache-config"/>
        <property name="supportedLayouts" value="${nfs.pnfs.layouts}" />
    </bean>

    <bean id="pool-manager-handler" class="org.dcache.poolmanager.PoolManagerHandlerSubscriber">
        <description>Pool manager client</description>
        <property name="poolManager" ref="poolManagerStub"/>
    </bean>

    <bean id="cache-config" class="org.dcache.nfs.vfs.VfsCacheConfig">
        <property name="maxEntries" value="${nfs.namespace-cache.size}" />
        <property name="lifeTime" value="${nfs.namespace-cache.time}" />
        <property name="timeUnit" value="${nfs.namespace-cache.time.unit}" />
        <property name="fsStatLifeTime" value="${nfs.fs-stat-cache.time}" />
        <property name="fsStatTimeUnit" value="${nfs.fs-stat-cache.time.unit}" />
        <property name="readdirMaxEntries" value="${nfs.readdir-cache.size}" />
        <property name="readdirLifeTime" value="${nfs.readdir-cache.time}" />
        <property name="readdirLifeTimeUnit" value="${nfs.readdir-cache.unit}" />
    </bean>

    <beans  profile="portmap-true">
        <bean id="rpcbind" class="org.dcache.xdr.portmap.OncRpcEmbeddedPortmap"
	    destroy-method="shutdown"/>
    </beans>

    <beans  profile="portmap-false">
        <!--
            as other rpc services depend on rpcbind,
            crreate a place holder to keep depemdency happy
        -->
        <bean id="rpcbind" class="java.lang.Object"/>
    </beans>

</beans>
