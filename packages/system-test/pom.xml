<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.dcache</groupId>
    <artifactId>packaging</artifactId>
    <version>10.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>system-test</artifactId>
  <packaging>pom</packaging>

  <name>System tests</name>

  <properties>
      <skel>${project.basedir}/../../skel</skel>
      <filtered-skel>${project.build.directory}/filtered-skel</filtered-skel>
  </properties>

  <dependencies>
      <dependency>
          <groupId>org.dcache</groupId>
          <artifactId>dcache-plugin-hsqldb</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
      </dependency>
  </dependencies>

  <build>
      <finalName>dcache</finalName>
      <plugins>
          <plugin>
              <!-- ant is used rather than the maven resources plugin,
                   because ant allows us to preserve the lastmodified
                   time of the files it copies. -->
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                  <execution>
                      <phase>prepare-package</phase>
                      <configuration>
                          <target>
                              <selector id="binary.files">
                                  <or>
                                      <filename name="**/*.gif" />
                                      <filename name="**/*.jpg" />
                                      <filename name="**/*.png" />
                                      <filename name="**/*.jar" />
                                      <filename name="**/*.ico" />
                                      <filename name="**/*.svg" />
                                      <filename name="**/*.woff" />
                                      <filename name="**/*.eot" />
                                      <filename name="**/*.ttf" />
                                      <filename name="**/*.css" />
                                      <filename name="**/*.js" />
                                  </or>
                              </selector>
                              <filterset id="filter">
                                  <filtersfile file="${project.basedir}/src/main/assembly/filter.properties" />
                                  <filter token="project.version" value="${project.version}" />
                                  <filter token="TARGET" value="${project.build.directory}" />
                                  <filter token="SOURCE" value="${project.basedir}/src/main" />
                                  <filter token="version.swagger-ui" value="${version.swagger-ui}" />
                                  <filter token="DCACHE_LOAD_CONFIG" value=" DCACHE_HOME=&quot;${project.build.directory}/${project.build.finalName}&quot;${line.separator} DCACHE_CLASSPATH=&quot;${DCACHE_HOME}/share/classes/*&quot;${line.separator} DCACHE_DEFAULTS=&quot;${DCACHE_HOME}/share/defaults&quot;${line.separator} DCACHE_CACHED_CONFIG=&quot;${DCACHE_HOME}/var/config/cache&quot;${line.separator} . &quot;${DCACHE_HOME}/share/lib/loadConfig.sh&quot;" />
                              </filterset>

                              <copy todir="${filtered-skel}" overwrite="true" preservelastmodified="true">
                                  <fileset dir="${skel}">
                                      <not>
                                          <selector refid="binary.files" />
                                      </not>
                                  </fileset>
                                  <filterset refid="filter" />
                              </copy>
                              <copy todir="${filtered-skel}" overwrite="true" preservelastmodified="true">
                                  <fileset dir="${skel}">
                                      <selector refid="binary.files" />
                                  </fileset>
                              </copy>
                              <copy todir="${filtered-skel}" overwrite="true" preservelastmodified="true">
                                  <fileset dir="${project.basedir}/src/main/skel" />
                              </copy>
                              <copy todir="${project.build.directory}/bin" overwrite="true" preservelastmodified="true">
                                  <fileset dir="${project.basedir}/src/main/bin" />
                                  <filterset refid="filter" />
                              </copy>
                              <chmod dir="${project.build.directory}/bin" perm="ugo+rx" includes="*" />
                          </target>
                      </configuration>
                      <goals>
                          <goal>run</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <artifactId>maven-assembly-plugin</artifactId>
              <configuration>
                  <descriptors>
                      <descriptor>src/main/assembly/assembly.xml</descriptor>
                  </descriptors>
                  <formats>
                      <format>dir</format>
                  </formats>
                  <appendAssemblyId>false</appendAssemblyId>
                  <attach>false</attach>
              </configuration>
              <executions>
                  <execution>
                      <id>make-assembly</id>
                      <phase>package</phase>
                      <goals>
                          <goal>single</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <executions>
                  <execution>
                      <id>populate</id>
                      <phase>package</phase>
                      <goals>
                          <goal>exec</goal>
                      </goals>
                      <configuration>
                          <workingDirectory>${project.build.directory}</workingDirectory>
                          <executable>/bin/sh</executable>
                          <arguments>
                            <argument>-c</argument>
                            <argument>bin/populate 2&gt;&amp;1</argument>
                          </arguments>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
      </plugins>
  </build>

    <profiles>
        <profile>
            <id>stop</id>
            <activation>
                <file>
                    <!-- Maven does not allow this path to be interpolated -->
                    <exists>target/bin/ctlcluster</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>stop</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <executable>bin/ctlcluster</executable>
                                    <arguments>
                                        <argument>stop</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>start</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <executable>bin/ctlcluster</executable>
                                    <arguments>
                                        <argument>restart</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
