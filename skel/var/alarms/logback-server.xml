<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
    <appender name="SERVER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${alarms.dir}/server.log</File>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>server.%i.log</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>3</MaxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>8MB</MaxFileSize>
        </triggeringPolicy>

        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{dd MMM yyyy HH:mm:ss} %-5level %logger - %message%n</Pattern>
        </layout>
    </appender>

    <appender name="HISTORY" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${alarms.dir}/history.log</File>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>history.%i.log</FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>3</MaxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>8MB</MaxFileSize>
        </triggeringPolicy>

        <encoder>
            <pattern>%-5level %d{dd MMM yyyy HH:mm:ss} \(%X{host}\)\(%X{cells.cell}\)\(%X{cells.domain}\) %m%n</pattern>
        </encoder>
    </appender>

    <!--
        if you wish alarms to be sent as email, you will need to provide host,
        to and from information below (note the possibility of multiple 'to's),
        and then include the appender in the root logger.
    -->
    <appender name="ALARM_MAIL" class="ch.qos.logback.classic.net.SMTPAppender">
        <!-- this filter ensures that only events sent marked as ALARM
             are received by this appender -->
        <filter class="org.dcache.alarms.logback.AlarmMarkerFilter"/>
        <smtpHost></smtpHost>
        <to></to>
        <to></to>
        <from></from>
        <subject>dCache Alarm</subject>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%-5level %d{dd MMM yyyy HH:mm:ss} \(%X{host}\)\(%X{cells.cell}\)\(%X{cells.domain}\) %m%n</pattern>
        </layout>
        <cyclicBufferTracker class="ch.qos.logback.core.spi.CyclicBufferTrackerImpl">
            <!-- send just one log entry per email -->
            <bufferSize>1</bufferSize>
        </cyclicBufferTracker>
    </appender>

    <!-- stores all received events; adds alarm metadata on the basis of either
         a marker or a match with one of the alarmType definitions provided;
         delegates all received events to other appenders, possibly with using a
         cloned event with an added alarm marker if it is an alarm and was not
         originally sent with one.
         for further information, see the dCache Book -->
    <appender name="STORE" class="org.dcache.alarms.logback.LogEntryAppender">
        <storePath>${alarms.store.path}</storePath>
        <url>${alarms.store.db.url}</url>
        <user>${alarms.store.db.user}</user>
        <pass>${alarms.store.db.pass}</pass>
        <driver>${alarms.store.db.driver}</driver>
        <propertiesPath>${alarms.store.db.properties}</propertiesPath>
        <definitionsPath>${alarms.definitions.path}</definitionsPath>
        <!-- it would be normal to comment this out if you are using an RDBMS
             and not running periodic deletes -->
        <appender-ref ref="HISTORY"/>
        <!-- uncomment this in order to receive alarm mails;
             see below for how to set mail appender -->
        <!-- <appender-ref ref="ALARM_MAIL"/> -->
    </appender>

    <logger name="ch.qos.logback" additivity="false" level="warn">
         <appender-ref ref="SERVER"/>
    </logger>

    <!-- do not change the name of this logger (used internally) -->
    <logger name="domain" additivity="false">
         <appender-ref ref="SERVER"/>
    </logger>

    <root level="${alarms.server.log.level}">
        <appender-ref ref="STORE"/>
    </root>
</configuration>
