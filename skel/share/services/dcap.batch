#
#    dCap    D o o r
#

onerror shutdown
check -strong dcap.limits.clients
check -strong dcap.mover.overwrite
check -strong dcap.net.port
check -strong cell.name
check -strong dcap.service.poolmanager
check -strong dcap.service.pnfsmanager
check -strong dcap.service.gplazma
check -strong dcap.service.billing
check -strong dcap.service.pinmanager
check -strong dcap.service.loginbroker
check -strong dcap.service.loginbroker.update-period
check -strong dcap.service.loginbroker.update-period.unit
check -strong dcap.service.loginbroker.update-threshold
check -strong dcap.authn.protocol
check -strong dcap.authz.truncate
check -strong dcap.authz.readonly
check -strong dcap.authz.anonymous-operations
check dcap.authn.passwd
check dcap.mover.queue
check dcap.net.listen
check -strong dcache.paths.share

exec file:${dcache.paths.share}/cells/stage.fragment dcap doors

set env arguments-plain "-localOk"
set env arguments-auth "-pswdfile=${dcap.authn.passwd} -authorization=required"
set env arguments-gsi "-localOk -authorization=strong -socketfactory=\\\"javatunnel.TunnelServerSocketCreator,javatunnel.GsiTunnel,-service_key='${dcap.authn.hostcert.key}' -service_cert='${dcap.authn.hostcert.cert}' -service_trusted_certs='${dcap.authn.capath}' -service_voms_dir='${dcap.authn.vomsdir}' -ciphers='${dcap.security.ciphers}'\\\""
set env arguments-kerberos "-localOk -authorization=strong -socketfactory=javatunnel.TunnelServerSocketCreator,javatunnel.GssTunnel,'${dcap.authn.kerberos.service-principle-name}'"

create dmg.cells.services.login.LoginManager ${cell.name} \
            "${dcap.net.port} diskCacheV111.doors.DCapDoor \
             -listen=${dcap.net.listen} \
             -export \
             -acceptErrorWait=60000 \
             -keepAlive=300 \
             -poolRetry=2700 \
             -prot=telnet \
             -keepPrincipal \
             -read-only=${dcap.authz.readonly} \
             -truncate=${dcap.authz.truncate} \
             -maxLogin=${dcap.limits.clients} \
             -brokerUpdateTime=${dcap.service.loginbroker.update-period} \
             -brokerUpdateTimeUnit=${dcap.service.loginbroker.update-period.unit} \
             -brokerUpdateOffset=${dcap.service.loginbroker.update-threshold} \
             -protocolFamily=${dcap.service.loginbroker.family} \
             -protocolVersion=${dcap.service.loginbroker.version} \
             -loginBroker=${dcap.service.loginbroker}  \
             -pnfsManager=${dcap.service.pnfsmanager} \
             -poolManager=${dcap.service.poolmanager}  \
             -poolProxy=${dcap.service.poolmanager} \
             -pinManager=${dcap.service.pinmanager} \
             -gplazma=\"${dcap.service.gplazma}\" \
             -billing=\"${dcap.service.billing}\" \
             -stageConfigurationFilePath=\"${dcap.authz.staging}\" \
             -io-queue=${dcap.mover.queue} \
             -io-queue-overwrite=${dcap.mover.overwrite} \
             -anonymous-access=${dcap.authz.anonymous-operations} \
             ${arguments-${dcap.authn.protocol}} \
             "
