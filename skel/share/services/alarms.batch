##
# Alarms service
##

onerror shutdown

check -strong alarms.cell.name
check -strong alarms.net.port
check -strong alarms.db.type
check -strong alarms.db.url
check alarms.cell.consume
check alarms.db.xml.path
check alarms.enable.email
check alarms.email.smtp-host
check alarms.email.smtp-port
check alarms.email.start-tls
check alarms.email.ssl
check alarms.email.user
check alarms.email.password
check alarms.email.to
check alarms.email.from
check alarms.email.subject
check alarms.email.buffer-size
check alarms.email.threshold
check alarms.email.encoding-pattern
check alarms.enable.cleaner
check alarms.limits.workers
check alarms.limits.message-threads
check alarms.limits.queue-size

define env checkAlarmCleanerProperites end
     check -strong alarms.cleaner.timeout
     check -strong alarms.cleaner.timeout.unit
     check -strong alarms.cleaner.delete-entries-before
     check -strong alarms.cleaner.delete-entries-before.unit
end

onerror continue
eval ${alarms.enable.cleaner} true ==
exec env checkAlarmCleanerProperites -ifok
onerror shutdown

create org.dcache.alarms.logback.LogServerCell ${alarms.cell.name} \
        "classpath:org/dcache/alarms/logback/alarms.xml \
        -profiles=${alarms.db.type} \
        -consume=${alarms.cell.consume}"
