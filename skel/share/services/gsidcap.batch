# Starts a GSI DCAP cell

# Required variables
onerror shutdown
check -strong dcache.paths.share
check -strong port
check -strong cell.name
check -strong poolmanager
check -strong pnfsmanager
check -strong spacemanager
check -strong loginBroker
check -strong gsidcapIoQueueOverwrite
check -strong gsidcapMaxLogin
check -strong srmSpaceManagerEnabled
check -strong dcapReadOnly
check -strong dcapAnonymousAccessLevel
check gsidcapIoQueue
check listen
check gsidcap.security.ciphers

#
#  ----  Usage of Srm Space Manager
#
#   If srmSpaceManagerEnabled is on we need to use SrmSpaceManager
#   as both poolManager and poolProxy
#
onerror continue
define env srmSpaceManagerOn.exe endExe
  set env -c doorPoolManager "${spacemanager}"
endExe
eval ${srmSpaceManagerEnabled} true == ${srmSpaceManagerEnabled} on == || ${srmSpaceManagerEnabled} yes == || ${srmSpaceManagerEnabled} enabled == ||
exec env srmSpaceManagerOn.exe -ifok
set env -c doorPoolManager "${poolmanager}"
onerror shutdown

# External definitions
exec file:${dcache.paths.share}/cells/stage.fragment doors
exec file:${dcache.paths.share}/cells/embedded-gPlazma.fragment

create dmg.cells.services.login.LoginManager ${cell.name} \
             "${port} \
              -listen=${listen} \
              diskCacheV111.doors.DCapDoor \
              -export \
              -prot=telnet -localOk \
              -maxLogin=${gsidcapMaxLogin} \
              -pnfsManager=${pnfsmanager} \
              -poolManager=${doorPoolManager}  \
              -poolProxy=${doorPoolManager} \
              -pinManager=PinManager \
              -loginBroker=${loginBroker} \
              -brokerUpdateTime=120 \
              -protocolFamily=gsidcap \
              -protocolVersion=1.3.0 \
              -authorization=strong \
              -stageConfigurationFilePath=${stageConfigurationFilePath} \
              -io-queue=${gsidcapIoQueue} \
              -io-queue-overwrite=${gsidcapIoQueueOverwrite} \
              -socketfactory=\"javatunnel.TunnelServerSocketCreator,javatunnel.GsiTunnel,-service_key='${grid.hostcert.key}' -service_cert='${grid.hostcert.cert}' -service_trusted_certs='${grid.ca.path}' -service_voms_dir='${grid.path}/vomsdir' -ciphers='${gsidcap.security.ciphers}'\" \
              -read-only=${dcapReadOnly} \
              -anonymous-access=${dcapAnonymousAccessLevel} \
              "

