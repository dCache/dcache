# Starts admin door

onerror shutdown
check -strong knownUsersFile
check -strong serverKeyFile
check -strong hostKeyFile
check -strong userPasswordFile
check -strong AccessControlCell
check -strong port
check -strong admin.colors.enable
check -strong cell.name
check adminHistoryFile
check admin.net.listen



define env failMissingServerKey.exe endDefine
   say -level=esay "The server key file ${serverKeyFile} is missing.  Please generate it with:"
   say -level=esay "     ssh-keygen -b 768 -t rsa1 -f ${serverKeyFile} -N \"\""
   exit 1
endDefine
onerror continue
test -f ${serverKeyFile}
set env have_server_key ${rc}
onerror shutdown
exec env failMissingServerKey.exe -ifnotok=have_server_key


define env failMissingHostKey.exe endDefine
   say -level=esay "The host key file ${hostKeyFile} is missing.  Please generate it with:"
   say -level=esay "     ssh-keygen -b 1024 -t rsa1 -f ${hostKeyFile} -N \"\""
   exit 1
endDefine
onerror continue
test -f ${hostKeyFile}
set env have_host_key ${rc}
onerror shutdown
exec env failMissingHostKey.exe -ifnotok=have_host_key


# The SshKeyManager uses the following hard-coded context:
#
#    hostKeyFile      - filename of the host SSH private key
#    serverKeyFile    - filename of the server SSH private key
#    knownHostsFile   - filename of rhosts-like authorised (like
#                       ~/.rhosts)
#    knownUsersFile   - filename of authorised users (like
#                       ~/.ssh/authorized_keys, must be SSHv1 keys)
#    userPasswordFile - how to authorise username/password logins
#
set context hostKeyFile "${hostKeyFile}"
set context serverKeyFile "${serverKeyFile}"
set context knownUsersFile "${knownUsersFile}"
set context userPasswordFile "${userPasswordFile}"

create dmg.cells.services.login.SshKeyManager    skm

#create dmg.cells.services.login.LoginManager slm \
#      "${port}  \
#       -listen=${admin.net.listen} \
#       dmg.cells.services.StreamLoginCell \
#       -prot=ssh -auth=dmg.cells.services.login.SshSAuth_X"

create dmg.cells.services.login.LoginManager ${cell.name} \
      "${port}  \
       dmg.cells.services.login.StreamObjectCell \
       -prot=ssh -auth=dmg.cells.services.login.SshSAuth_A \
       -history=${adminHistoryFile} \
       -listen=${admin.net.listen} \
       -useColors=${admin.colors.enable} \
       diskCacheV111.admin.UserAdminShell"

create dmg.cells.services.login.user.AclCell ${AccessControlCell} \
            "${dcache.paths.ssh-keys}/users -egpassword=${dcache.paths.config}/passwd"

create diskCacheV111.admin.PAMAuthentificator pam " -syspassword=/etc/shadow"
