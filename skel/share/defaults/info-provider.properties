#  -----------------------------------------------------------------------
#     info-provider default values
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@
#
#   The info-provider generates LDIF-formatted data conforming to the
#   GLUE information model's LDAP bindings.  It takes information from
#   the XML data provided by the info service.  The info-provider
#   support script is run periodically by BDII to fetch data with
#   which it keeps its information up-to-date.
#
#   The info-provider requires both the info service and the internal
#   dCache web server.  It is possible to run BDII on a different
#   machine from the dCache web server; however, the BDII machine must
#   be able to access the web pages.
#

#  ---- Single words or phrases that describe your site
#
#   The following section has configuration that directly affects the
#   output from the info-provider.  Some properties affect only the
#   GLUE v1.3 output, others only affect the GLUE 2.0 output and the
#   remaining affect both.  The affected versions of GLUE are
#   indicated in square brackets.
#
#   GlueSiteUniqueID [1.3, 2.0] a unique reference for your site.
#   This must match the GlueSiteUniqueID defined in other services.
#
#   The default value is not valid, so this property must be
#   configured.
#
info-provider.site-unique-id=EXAMPLESITE-ID

#   GlueSEUniqueID [1.3, 2.0] your dCache's Unique ID.  Currently,
#   this MUST be the FQDN of your SRM end-point.
#
#   The default value is not valid, so this property must be
#   configured.
#
info-provider.se-unique-id=dcache-srm.example.org

#   GlueSEName [1.3, 2.0]: a human understandable name for your SE.
#   It may contain spaces.  If this is empty then the corresponding
#   attribute will not be published.
#
info-provider.se-name = ${dcache.description}

#   GlueSEStatus [1.3]: current status of dCache.  This should be one
#   of the following values:
#
#      Production   the SE processes old and new requests according to
#                   its policies,
#
#      Queuing      the SE can accept new requests, but they will be
#                   kept on hold,
#
#      Closed       the SE does not accept new requests and does not
#                   process old requests,
#
#      Draining     the SE does not accept new request but still
#                   processes old requests.
#
#   In practice, most sites will use 'Production' all the time.
#
(one-of?Production|Queuing|Closed|Draining)info-provider.glue-se-status=Production

#   Quality level [2.0]: is the "maturity of the service in terms of
#   quality of the software components".
#
#   This should be one of the following values (case is significant)
#
#      development      The component is under active development both
#                       in functionalities and interfaces.
#
#      testing          The component has completed the development
#                       phase and is under testing.
#
#      pre-production   The component has completed the development and
#                       passed the testing phase; it is being used in
#                       real world scenarios.
#
#      production       The component has completed the development and
#                       is considered stable for real world scenarios.
#
#   In practice, most sites will use 'production' all the time.
#
(one-of?development|testing|pre-production|production)info-provider.dcache-quality-level=production

#   GlueSEArchitecture [1.3]: the architecture of the underlying
#   storage dCache is using.  This should be one of the following
#   values:
#
#      disk          non-robust, single-disk storage,
#
#      multidisk     disk-based storage that is robust against single disk
#                    failures,
#
#      tape          dCache has access to an HSM system.
#
#      other         reserved for other technologies, although setting this
#                    value is unlikely to be correct.
#
#   In practice, most sites without HSM connectivity will use RAID
#   disk pools, so 'multidisk' is appropriate.  Those with an attached
#   HSM should use 'tape'.
#
(one-of?disk|multidisk|tape|other)info-provider.dcache-architecture=multidisk

#   DIT-PARENT [1.3]: A site will typically have multiple
#   resource-level BDIIs, a single site-level BDII and zero or more
#   top-level BDIIs.  The site-level BDII is periodically updated with
#   information from the various resource-level BDII.
#
#   Most sites will deploy a resource-level BDII for each dCache
#   instance.  The output from running the info provider script is
#   injected into this BDII.  If the BDII is on a dCache head node
#   then the BDII is very likely a resource-level BDII.  This is the
#   default for YAIM based installations.
#
#   It is also possible to inject information directly into the
#   site-level BDII.  This removes the need to have a resource-level
#   BDII; however, the site-level BDII requires LDIF that has a
#   slightly different structure.
#
#   If the LDIF output is for a resource-level BDII then the
#   DIT-PARENT constant below should have the value 'resource'.  If
#   the LDIF output is for a site-level BDII then it should have the
#   same value as the SITE-UNIQUE-ID constant above.
#
#   If you are unsure, do not modify this property.
#
info-provider.dit-parent=resource



#  ---- Location of tape accounting information
#
#   The information about a site's tape usage that WLCG would like
#   published cannot come from dCache, so must be supplied by the site.
#
#   This info-provider expects that this information is in a separate
#   file.  Sites should write a small script that creates the file with
#   up-to-date information.  There is a description of this file's format
#   inside the tape-info-empty.xml file.
#
#   If you are a site with tape storage that is to be published,
#   change the tape-info location value below to an appropriate
#   location, such as:
#
#      /var/opt/dcache/tape-info.xml
#
#   Ensure that that file exists with up-to-date information.
#
#   If you are a site without tape storage then simply leave this
#   property alone.
#
info-provider.paths.tape-info=${dcache.paths.share}/xml/tape-info-empty.xml

#  ---  Publishing doors
#
#   The info-provider can publish the interfaces of doors as
#   GlueSEAccessProtocol objects (non-SRM) and
#   GlueSEControlProtocol-GlueService pair of objects (SRM) in GLUE
#   v1.3, and as GLUE2StorageEndpoint objects in GLUE v2.0.  This
#   published information comes from the information the door
#   publishes about itself, which includes a set of tags.  The
#   info-provider will only publish door interfaces if that door
#   publishes the following tag.
#
info-provider.door.tag = glue

#  ---- Host that is running the web service
#
#   The name of the machine that is running the dCache web server.
#   This is used to build the URI for fetching dCache's current state.
#
info-provider.http.host = localhost

#  ---- Port on which the web service runs
#
#   The TCP port the dCache web server is running on. This is used to
#   build the URI for fetching dCache's current state.
#
info-provider.http.port = ${httpd.net.port}

#  ---- The GLUE versions that are published
#
#   This property describes whether to publish GLUE v1.3 only, to
#   publish GLUE v2.0 only, or to publish both GLUE v1.3 and GLUE
#   v2.0.
#
(one-of?1.3|2.0|both)info-provider.publish = both

#  ---- XSLT processor
#
#   This property describes which XSLT processor to use.  Acceptable
#   values are 'xsltproc' and 'saxon'.
#
(one-of?xsltproc|saxon)info-provider.processor = saxon

#  ---- Site-specific configuration
#
#   This property describes the location site-specific configuration.
#   An example file is provided but this example needs to be carefully
#   adjust.
#
info-provider.configuration.site-specific.location=${dcache.paths.etc}/info-provider.xml

#  ---- Directory of LDAP transformation configuration
#
#   This property describes in which directory the site-independent
#   configuration files are stored.
#
info-provider.configuration.dir = ${dcache.paths.share}/info-provider

#  ---- Filename of LDAP transformation configuration
#
#   This variable provides the filename that describes how the XML
#   should be transformed.
#
info-provider.configuration.file = glue-${info-provider.publish}.xml

info-provider.configuration.location = ${info-provider.configuration.dir}/${info-provider.configuration.file}

info-provider.xylophone.dir = ${dcache.paths.share}/xml/xylophone

info-provider.saxon.dir = ${dcache.paths.classes}

#  The name of the pinmanager service.  The "file pinning" capacity is
#  published (in GLUE 1.3) if this service is running.
info-provider.service.pinmanager = ${dcache.service.pinmanager}

#  The name of the PoolManager.  The dCache version of the domain
#  hosting this service is used to publish the dCache version.
info-provider.service.poolmanager = ${dcache.service.poolmanager}

#  Whether to publish in GLUE-1.3 that "space allocation" and "space
#  management" is supported.
(one-of?true|false|${dcache.enable.space-reservation})info-provider.enable.space-reservation = ${dcache.enable.space-reservation}

#
#  Obsolete or Forbidden properties
#
