# -----------------------------------------------------------------------
#    Default values for transfermanagers
# -----------------------------------------------------------------------
@DEFAULTS_HEADER@

transfermanagers.cell.name=RemoteTransferManager

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other services can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
transfermanagers.cell.consume = ${transfermanagers.cell.name}

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
(immutable)transfermanagers.cell.replicable = true

# Timeout for pool requests
transfermanagers.service.pool.timeout = 300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)transfermanagers.service.pool.timeout.unit=SECONDS

# Cell address of pnfsmanager service
transfermanagers.service.pnfsmanager=${dcache.service.pnfsmanager}

# Timeout for pnfsmanager requests
transfermanagers.service.pnfsmanager.timeout = 300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)transfermanagers.service.pnfsmanager.timeout.unit = SECONDS

# Cell address of poolmanager service
transfermanagers.service.poolmanager=${transfermanagers.service.poolmanager-when-space-reservations-${transfermanagers.enable.space-reservation}}
(immutable)transfermanagers.service.poolmanager-when-space-reservations-false=${dcache.service.poolmanager}
(immutable)transfermanagers.service.poolmanager-when-space-reservations-true=${dcache.service.spacemanager}

# Timeout for poolmanager requests
transfermanagers.service.poolmanager.timeout = 300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)transfermanagers.service.poolmanager.timeout.unit = SECONDS

# Cell address of spacemanager services
transfermanagers.service.spacemanager=${dcache.service.spacemanager}

# Cell address of billing service
transfermanagers.service.billing=${dcache.topic.billing}

# Timeout for billing requests
transfermanagers.service.billing.timeout = 300
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)transfermanagers.service.billing.timeout.unit = SECONDS

# Maximum number of concurrent third party SRM copy transfers internal to this
# dCache instance. Internal transfers are those in which both the source and
# the destination is the local SRM.
transfermanagers.limits.internal-transfers = 150

# Maximum number of concurrent third party SRM copy transfers between this
# dCache and another SRM.
transfermanagers.limits.external-transfers = 1000

# Mover queue
#
# The mover queue on the pool to which third party SRM copy transfers will be
# submitted. If blank, the default queue will be used.
transfermanagers.mover.queue =

# Time limit on how long an SRM third party copy transfer may last
transfermanagers.limits.transfer-time = 7200
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)transfermanagers.limits.transfer-time.unit=SECONDS


# Whether space reservations should be supported for third party SRM copy transfers.
(one-of?true|false|${dcache.enable.space-reservation})transfermanagers.enable.space-reservation=${dcache.enable.space-reservation}

# Database settings
# Obsolete
(one-of?true|false)transfermanagers.enable.db=false
(obsolete)transfermanagers.db.host = DB functionality is removed
(obsolete)transfermanagers.db.name = DB functionality is removed
(obsolete)transfermanagers.db.user = DB functionality is removed
(obsolete)transfermanagers.db.password = DB functionality is removed
(obsolete)transfermanagers.db.password.file = DB functionality is removed
(obsolete)transfermanagers.db.url= DB functionality is removed
(obsolete)(prefix)transfer-manager.db.hikari-properties = DB functionality is removed


# The transfermanagers service automatically manages its database schema
(obsolete)(immutable)transfermanagers.db.schema.auto=DB functionality is removed

# Kafka
(one-of?true|false|${dcache.enable.kafka})transfermanagers.enable.kafka = ${dcache.enable.kafka}
transfermanagers.kafka.topic = ${dcache.kafka.topic}
transfermanagers.kafka.producer.bootstrap.servers = ${dcache.kafka.bootstrap-servers}
(prefix)transfermanagers.kafka.producer.configs = Configuration for Kafka Producer

# Obsolete
(obsolete)transfermanagers.cell.export = See transfermanagers.cell.consume
