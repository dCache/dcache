#  -----------------------------------------------------------------------
#     Default values for admin doors
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@


# Cell name
admin.cell.name = admin

admin.cell.subscribe = ${admin.loginbroker.update-topic}

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
(immutable)admin.cell.replicable = false

# System identification as shown in the admin prompt
admin.prompt = ${host.name}

#  ---- Interface and TCP port to listen to
#
admin.net.port = 22224
admin.net.listen = ${dcache.net.listen}

#  ---- Admin group
#
#   This property defines the GID of the group containing all users
#   allowed administrate dCache (via ssh2).
admin.authz.gid = 0

#  ---- Admin door history file
#
#   The admin door can store a command history in a file. This makes
#   the history persistent over multiple logins. To enable this
#   feature, set admin.paths.history to the path of the file that
#   should be used to store the history. The recommended path is
#   '/var/lib/dcache/admin/', so your admin history file path could be:
#
#   admin.paths.history =  /var/lib/dcache/admin/history
#
#   Notice that missing directories are not created automatically.
admin.paths.history =

#  ---- Admin door history size
#
#   The size of the history in lines and thereby the history can be
#   limited by setting admin.history.size to an integer value. The
#   standard size is 500.
#
admin.history.size = 500

#  ---- Whether to use ANSI colors or not
#
#   When set to true ANSI codes will be used to add colors to the
#   admin shell.
#
(one-of?true|false)admin.enable.colors = true

#  ---- Authorized_keys list location
#
#  Defines the location of the authorized public keys
#
admin.paths.authorized-keys = ${dcache.paths.admin}/authorized_keys2

#  ---- Hostkey location
#
#  The path of the ssh server host key.
#
(obsolete)admin.paths.dsa-host-key.private = Use admin.paths.host-keys
(obsolete)admin.paths.dsa-host-key.public = No longer used
admin.paths.host-keys = ${dcache.paths.admin}/ssh_host_rsa_key

#  ---- Authentication mechanisms
#
# Supported ssh authentication mechanisms : kerberos, password, publickey
#
(any-of?kerberos|password|publickey)admin.ssh.authn.enabled = password,publickey

# location of keytab file needed if kerberos authentication mechanism is used
admin.ssh.authn.kerberos.keytab-file = /etc/krb5.keytab

# Cell addresses and timeouts of other services
admin.service.gplazma=${dcache.service.gplazma}
admin.service.gplazma.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.service.gplazma.timeout.unit=MILLISECONDS

admin.service.poolmanager=${dcache.service.poolmanager}
admin.service.poolmanager.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.service.poolmanager.timeout.unit=MILLISECONDS

admin.service.spacemanager=${dcache.service.spacemanager}
admin.service.spacemanager.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.service.spacemanager.timeout.unit=MILLISECONDS

admin.service.pnfsmanager=${dcache.service.pnfsmanager}
admin.service.pnfsmanager.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.service.pnfsmanager.timeout.unit=MILLISECONDS

admin.loginbroker.update-topic = ${dcache.loginbroker.update-topic}
admin.loginbroker.request-topic = ${dcache.loginbroker.request-topic}

admin.service.acm=${dcache.service.acm}
admin.service.acm.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.service.acm.timeout.unit=MILLISECONDS

# Timeout for idle ssh connections.
# the allowed values are: infinity or any positive number
admin.ssh.idle-timeout = infinity
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)admin.ssh.idle-timeout.unit=MINUTES

#
#  Document which TCP ports are opened
#
(immutable)admin.net.ports.tcp=${admin.net.port}
