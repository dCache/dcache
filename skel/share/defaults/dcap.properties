#  -----------------------------------------------------------------------
#     Default values for DCAP doors
#  -----------------------------------------------------------------------
#
#   This Java properties file contains default values for DCAP
#   configuration parameters. All values can be redefined in
#   etc/dcache.conf. Do not modify any values here as your changes
#   will be lost when you next upgrade.

# Cell names for DCAP doors
dcap.cell.name=${dcap.cell.name.${dcap.authn.protocol}}
dcap.cell.name.plain=DCap-${host.name}
dcap.cell.name.auth=DCap-auth-${host.name}
dcap.cell.name.gsi=DCap-gsi-${host.name}
dcap.cell.name.kerberos=DCap-Kerberos-${host.name}
dcap/cell.name=${dcap.cell.name}

# Authentication protocol
(one-of?plain|auth|kerberos|gsi)dcap.authn.protocol=plain

# Password authentication file for password authenticated dcap
(deprecated)dcapPasswdFile=${dcache.paths.etc}/passwd4dCapDoor
dcap.authn.passwd=${dcapPasswdFile}

# Kerberos settings for kerberos authentication
dcap.authn.kerberos.service-principle-name=host/${host.fqdn}@${kerberos.realm}
dcap.authn.kerberos.key-distribution-center-list=${kerberos.key-distribution-center-list}

# Paths related to GSI authenticated dcap
dcap.authn.hostcert.cert=${grid.hostcert.cert}
dcap.authn.hostcert.key=${grid.hostcert.key}
dcap.authn.capath=${grid.ca.path}
dcap.authn.vomsdir=${grid.path}/vomsdir

# Security related properties
(deprecated)gsidcap.security.ciphers=${dcache.security.ciphers}
dcap.security.ciphers=${gsidcap.security.ciphers}

# Whether to allow existing files to be truncated on open.
(one-of?true|false|${truncate})dcap.authz.truncate=${truncate}
(deprecated,one-of?true|false)truncate=false

# Level of anonymous (unauthenticated) access allows through a dcap door
(deprecated,one-of?NONE|READONLY|FULL)dcapAnonymousAccessLevel=NONE
(one-of?NONE|READONLY|FULL|${dcapAnonymousAccessLevel})dcap.authz.anonymous-operations=${dcapAnonymousAccessLevel}

# Whether the dcap door is read-only
(deprecated,one-of?true|false)dcapReadOnly=false
(one-of?true|false|${dcapReadOnly})dcap.authz.readonly=${dcapReadOnly}

# Authorization for tape protection
dcap.authz.staging=${dcache.authz.staging}
dcap.authz.staging.pep=${dcache.authz.staging.pep}

# Network related properties
dcap.net.port=${dcap.net.port.${dcap.authn.protocol}}
dcap.net.port.plain=${dCapPort}
dcap.net.port.auth=${dCapAuthPort}
dcap.net.port.gsi=${dCapGsiPort}
dcap.net.port.kerberos=${dCapKerberosPort}
(deprecated)dCapPort=22125
(deprecated)dCapGsiPort=22128
(deprecated)dCapAuthPort=22129
(deprecated)dCapKerberosPort=22725

dcap.net.listen=${dcache.net.listen}

# Pool mover queue to use for transfers by this door
dcap.mover.queue=${dcap.mover.queue.${dcap.authn.protocol}}
(immutable)dcap.mover.queue.plain=${dcapIoQueue}
(immutable)dcap.mover.queue.auth=${dcapIoQueue}
(immutable)dcap.mover.queue.gsi=${gsidcapIoQueue}
(immutable)dcap.mover.queue.kerberos=${kerberosdcapIoQueue}
(deprecated)dcapIoQueue=
(deprecated)gsidcapIoQueue=
(deprecated)kerberosdcapIoQueue=

# Whether a dcap client is allowed to override which mover queue on
# the pool is used to schedule a request.
(one-of?allowed|denied|${dcap.mover.overwrite.${dcap.authn.protocol}})dcap.mover.overwrite=${dcap.mover.overwrite.${dcap.authn.protocol}}
(immutable)dcap.mover.overwrite.plain=${dcapIoQueueOverwrite}
(immutable)dcap.mover.overwrite.auth=${dcapIoQueueOverwrite}
(immutable)dcap.mover.overwrite.gsi=${gsidcapIoQueueOverwrite}
(immutable)dcap.mover.overwrite.kerberos=${kerberosdcapIoQueueOverwrite}
(deprecated,one-of?allowed|denied)dcapIoQueueOverwrite=denied
(deprecated,one-of?allowed|denied)gsidcapIoQueueOverwrite=denied
(deprecated,one-of?allowed|denied)kerberosdcapIoQueueOverwrite=denied

# Maximum number of concurrent DCAP transfers on this door
dcap.limits.clients=${dcap.limits.clients.${dcap.authn.protocol}}
(immutable)dcap.limits.clients.plain=${dcapMaxLogin}
(immutable)dcap.limits.clients.auth=${dcapMaxLogin}
(immutable)dcap.limits.clients.gsi=${gsidcapMaxLogin}
(immutable)dcap.limits.clients.kerberos=${kerberosdcapMaxLogin}
(deprecated)dcapMaxLogin=1500
(deprecated)gsidcapMaxLogin=1500
(deprecated)kerberosdcapMaxLogin=1500

# Parameters related to talking to other services
dcap.service.loginbroker=${dcache.service.loginbroker}
dcap.service.loginbroker.update-period=${dcache.service.loginbroker.update-period}
dcap.service.loginbroker.update-period.unit=${dcache.service.loginbroker.update-period.unit}
dcap.service.loginbroker.update-threshold=${dcache.service.loginbroker.update-threshold}
dcap.service.loginbroker.family=dcap
dcap.service.loginbroker.version=1.3.0

dcap.service.pnfsmanager=${dcache.service.pnfsmanager}
dcap.service.gplazma=${dcache.service.gplazma}
dcap.service.billing=${dcache.service.billing}
dcap.service.spacemanager=${dcache.service.spacemanager}
dcap.service.pinmanager=${dcache.service.pinmanager}
dcap.service.poolmanager=${dcap.service.poolmanager-space-${dcap.enable.spacemanager}}
(immutable)dcap.service.poolmanager-space-false=${dcache.service.poolmanager}
(immutable)dcap.service.poolmanager-space-true=${dcache.service.spacemanager}
(one-of?true|false|${dcache.enable.spacemanager})dcap.enable.spacemanager=${dcache.enable.spacemanager}

#
#   Document which TCP ports are opened
#
(immutable)dcap/net.ports.tcp=${dcap.net.port}

# Old properties
(forbidden)kerberos.service-principle-name=Use dcap.authn.kerberos.service-principle-name
