#  -----------------------------------------------------------------------
#     Default values for xrootd
#  -----------------------------------------------------------------------
#
#   This Java properties file contains default values for xrootd
#   configuration parameters. All values can be redefined in
#   etc/dcache.conf. Do not modify any values here as your changes
#   will be lost when you next upgrade.

#  ---- Name of Xrootd door
#
xrootd/cell.name=Xrootd-${host.name}

#  ---- TCP port for Xrootd door
#
#   Specifies the TCP port on which the Xrootd door accepts connections.
#
xrootdPort=1094
xrootd/port=${xrootdPort}

#  ---- Worker thread limit
#
#   Maximum number of work threads used by the door. Since the worker
#   threads block on name space and pool manager operations, a
#   relatively large value is needed.
#
xrootdThreads=1000

#  ---- TCP backlog used by xrootd
#
#   1024 is typically the largest value allowed by the OS.
#
xrootdBacklog=1024

#  ---- Queue memory limit
#
#   Memory limit in bytes for xrootd frames queued for processing by a
#   worker thread.
#
xrootdMaxTotalMemorySize=16777216

#  ---- Per connection queue memory limit
#
#   Per connection memory limit in bytes for xrootd frames queued for
#   processing by a worker thread.
#
xrootdMaxChannelMemorySize=16777216

#  ---- PoolManager timeout
#
#   Specifies the timeout in milliseconds for communication with the
#   PoolManager cell.
#
xrootdPoolManagerTimeout=5400000

#  ---- Pool timeout
#
#   Specifies the timeout in milliseconds for communication with the
#   pool cells.
#
xrootdPoolTimeout=15000

#  ---- Mover queue timeout
#
#   Specifies the timeout in milliseconds after which the xrootd door
#   gives up on waiting for a mover to start. This places a bound on
#   the maximum mover queue time.
#
xrootdMoverTimeout=180000

#  ---- Root path of Xrootd door
#
#   Specifies the root directory exposed through the Xrootd door. Used
#   by both the xrootd and SRM services.
#
xrootdRootPath=/

#  ---- Allowed paths
#
#   These parameters are set to the absolute paths of directories
#   accessible through Xrootd. Multiple directories are separated by a
#   colon. Different directories may be specified for reads and
#   writes. An empty list will disallow access to all directories.
#
xrootdAllowedReadPaths=/
xrootdAllowedWritePaths=

#  ---- Used authentication
#
#  The authentication plugin.
#
#  The authentication behavour of the xrootd door is pluggable.  New
#  behaviour (i.e., new ways of authenticating a request) are possible
#  by writing code that describes the behaviour and deploying the
#  corresponding jar file.  No updates to dCache is needed.
#
#  Two plugins are provided with dCache:
#
#    none - no authentication is performed.
#
#    gsi  - any xrootd request to the door will use a key-exchange
#           process to identify the end-user.
#
(deprecated)xrootdAuthNPlugin=none

#  ---- Authorization plugin
#
#   The authorization plugin provides a policy decision point (PDP)
#   for authorization decisions in the xrootd door. An authorization
#   plugin can also perform LFN to PFN mappings.
#
#   Third party plugins can be used by adding the plugin to the plugin
#   directory of dCache and specify the plugin name here.
#
(deprecated)xrootdAuthzPlugin=none

#  ---- Xrootd plugins
#
#   Comma seperated list of plugins to inject into the xrootd
#   request processing chain.
#
#   dCache ships with a few authentication and authorization plugins:
#
#    gplazma:none - no authentication is performed; user identity is
#                   set to the value of xrootdUser (door only).
#
#    gplazma:gsi  - any xrootd request to the door will use a key-exchange
#                   process to identify the end-user (door only).
#
#    authz:alice-token - ALICE token based authorization plugin.
#
#   For xrootd doors, a gplazma authentication plugin is required; use
#   gplazma:none if no authentication is desired. Authorization plugins
#   have to be placed after the authentication plugin.
#
#   Third party plugins can be used by adding the plugin to the plugin
#   directory of dCache and specifing the plugin name here. Note that
#   third party authentication plugins have to be loaded with
#   gplazma:<plugin> in doors.
#
xrootdPlugins=gplazma:${xrootdAuthNPlugin},authz:${xrootdAuthzPlugin}

#  ---- User identity used for authorizing operations
#
#   As xrootd requests are not authenticated, an identity has to be
#   chosen for authorizing operations. All operations are performed as
#   this identity.
#
#   The authorization controlled by this parameter is different from
#   the authorization performed by the authorization plugin: The
#   authorization plugin validates the requests themselves
#   indepedently of the file which is accessed. E.g. the token based
#   authorization verifies that the request contains a
#   cryptopgrahically signed token from a trusted source.
#
#   Once the request is authorized it is subject to further
#   authorization by other components in dCache, e.g. PnfsManager or
#   PoolManager. Those authorizations happen wrt. the identity defined
#   by xrootdUser.
#
#   The default is 'nobody', meaning that only world-permissible
#   operations are allowed. Other valid values are 'root' (no further
#   authorization) and a string on the form UID:GID[,GID...], i.e. a
#   numerical UID followed by one or more numerical GIDs. The first
#   GID is the primary one.
#
xrootdUser=nobody

#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
xrootdIoQueue=

#  ---- Mover-idle timeout
#
#   Specifies the timeout in milliseconds before clients that connect to the
#   pool request handler but don't open any files will be disconnected.
xrootd.mover.timeout.idle=300000

#
#   Document which TCP ports are opened
#
(immutable)xrootd/net.ports.tcp = ${port}

(forbidden)xrootdIsReadOnly=Use xrootdAllowedWritePaths instead
(forbidden)xrootdAllowedPaths=Use xrootdAllowedReadPath and xrootdAllowedWritePaths
