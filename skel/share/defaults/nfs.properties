#  -----------------------------------------------------------------------
#     Default values for nfs
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

nfs.cell.name=NFS-${host.name}

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other services can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
nfs.cell.consume = ${nfs.cell.name}
nfs.cell.subscribe=${nfs.loginbroker.request-topic},PoolStatusTopic,${nfs.pool-monitor-topic}


#
# NFS versions to support.
#
# Comma separated list of NFS versions to support,
# For example:
#  nfs.version=3, 4.1
#
(any-of?3|4.1)nfs.version=3

#
# TCP port number of NFS door
#
nfs.net.port = 2049

#
# The local NFSv4 domain name. An NFSv4  domain is a namespace
# with a unique username<->UID and groupname<->GID mapping.
#
nfs.domain=

#
# The username<->UID and groupname<->GID mapping results are cached to improve
# NFS interface performance. The following value allowes to tweak caching timeout.
#

# maximal number of entries in the cache
nfs.idmap.cache.size = 512

# cache entry maximal lifetime
nfs.idmap.cache.timeout = 30

# Time unit used for timeout.
#
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)\
nfs.idmap.cache.timeout.unit = SECONDS


# Allow legacy numeric strings instead of principals. Used for backward compatibility
# and for setups without mapping service like NIS or LDAP.
(one-of?true|false)nfs.idmap.legacy = true

# If client uses AUTH_SYS and number of sub-groups is more than fifteen (15)
# then nfs door will query gplazma to discover additional user groups.
#
(one-of?true|false)nfs.idmap.manage-gids = false

#  ---- Mover queue
#
#   The mover queue on the pool to which this request will be
#   scheduled.
#
nfs.mover.queue =

#
# enable RPCSEC_GSS
#
(one-of?true|false)nfs.rpcsec_gss = false

#
# Location of export file
#
nfs.export.file=/etc/exports

#
# Location of a directory with extra export tables
#
# After reading nfs.export.file the files in the specified directory
# will be processed. Only files ending in .exports  are  considered.
# Files beginning with a dot are ignored.
#
nfs.export.dir=/etc/exports.d

#
# Start embedded portmap service if system one not available.
#
(one-of?true|false)nfs.enable.portmap=true

# Whether space reservations are supported
(one-of?true|false|${dcache.enable.space-reservation})nfs.enable.space-reservation=${dcache.enable.space-reservation}

#  ---- Parameters related to talking to other services
#
nfs.loginbroker.update-topic=${dcache.loginbroker.update-topic}
nfs.loginbroker.request-topic=${dcache.loginbroker.request-topic}
nfs.loginbroker.tags=${dcache.loginbroker.tags}
nfs.loginbroker.update-period=${dcache.loginbroker.update-period}
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS|${dcache.loginbroker.update-period.unit})\
  nfs.loginbroker.update-period.unit=${dcache.loginbroker.update-period.unit}
nfs.loginbroker.update-threshold=${dcache.loginbroker.update-threshold}
nfs.loginbroker.family = file
nfs.loginbroker.version = nfs4.1

# ---- Channel on which pool monitor updates are pushed out.
#
nfs.pool-monitor-topic=${dcache.pool-monitor.topic}


##  This property is a space-separated list of hostnames or IP
##  addresses to publish for this door.  Hostnames are resolved to an
##  IP address on start-up, but not subsequently.  Non-wildcard IP
##  addresses are resolved to canonical name on start-up, but not
##  subsequently.  Wildcard IP addresses (0.0.0.0 or ::) are replaced
##  by a dynamically discovered list of IP addresses, based on which
##  network interfaces are "up".  These are resolved, with the
##  corresponding hostnames cached for a configurable period (see
##  'networkaddress.cache.ttl' system property).  An empty value is
##  equivalent to "0.0.0.0".
nfs.loginbroker.address =
nfs.loginbroker.port = ${nfs.net.port}

# Cell address of poolmanager service
nfs.service.poolmanager=${nfs.service.poolmanager-space-${nfs.enable.space-reservation}}
(immutable)nfs.service.poolmanager-space-false=${dcache.service.poolmanager}
(immutable)nfs.service.poolmanager-space-true=${dcache.service.spacemanager}
nfs.service.poolmanager.timeout = 300000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.poolmanager.timeout.unit=MILLISECONDS

nfs.service.pinmanager=${dcache.service.pinmanager}
nfs.service.pinmanager.timeout=300000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.pinmanager.timeout.unit=MILLISECONDS

nfs.service.pool.timeout = 10000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.pool.timeout.unit=MILLISECONDS

nfs.service.gplazma=${dcache.service.gplazma}
nfs.service.gplazma.timeout = 3000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.gplazma.timeout.unit=MILLISECONDS

nfs.service.pnfsmanager=${dcache.service.pnfsmanager}
nfs.service.pnfsmanager.timeout = 500
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.service.pnfsmanager.timeout.unit=MILLISECONDS

nfs.service.billing=${dcache.topic.billing}

#
# Database related settings reserved for internal use.
#
(immutable)nfs.db.host=${chimera.db.host}
(immutable)nfs.db.name=${chimera.db.name}
(immutable)nfs.db.user=${chimera.db.user}
(immutable)nfs.db.password=${chimera.db.password}
(immutable)nfs.db.password.file=${chimera.db.password.file}
(immutable)nfs.db.url=${chimera.db.url}
(immutable)nfs.db.schema.changelog=${chimera.db.schema.changelog}
nfs.db.schema.auto=false
(prefix)nfs.db.hikari-properties = Hikari-specific properties

#
#  The maximum number of concurrent database connections.
#
nfs.db.connections.max = 30

#
#  The minimum number of idle database connections.
#
nfs.db.connections.idle = 1

#
#  Document which TCP ports are opened
#
(immutable)nfs.net.ports.tcp=(111) ${nfs.net.port}
(immutable)nfs.net.ports.udp=(111) ${nfs.net.port}

# attribute and lookup caching
#
# The properties are applied to two otherwise independent caches: the attribute and lookup caches.
#
# Lookup caching saves the translation from a path to a PNFS-ID and attribute caching saves the
# basic metadata of a file or directory (ownership, permissions, size, etc).
#
# That cached values will be released if memory becomes tight but, as the order of object
# recycling isn't guaranteed, it's best to avoid caching too many objects.
#
# Each cached entry takes 120 bytes of additional memory
nfs.namespace-cache.time = 3
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.namespace-cache.time.unit = SECONDS
nfs.namespace-cache.size = 0

# FS stat cache update interval. This variable controls frequency of
# aggregate queries to underlying db back-end when reporting
# total size and total number of files in namespace (e.g. when executing
# 'df' command). Depending on database implementation, the aggregate queries
# could be costly (PostgreSQL is one such implementation).
nfs.fs-stat-cache.time = 3600
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.fs-stat-cache.time.unit = SECONDS


#
# Directory listing cache size. NOTICE, that this is the number of directories to cache,
# independent of their size.
#
nfs.readdir-cache.size = 512

#
# Directory listing cache lifetime.
#
nfs.readdir-cache.time = 10
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)nfs.readdir-cache.unit = MINUTES

#
#  ---- Whether to enable contacting PnfsManager on move
#
# Currently this option makes sense only if
# pnfsmanager.enable.move-to-directory-with-different-storageclass
# is set to false. See pnfsmanager properties file for description
#
(one-of?true|false)nfs.enable.pnfsmanager-query-on-move = false


#
# NFS door message processing thread pool configuration
#
nfs.cell.max-message-threads = 8
nfs.cell.max-messages-queued = 1000

# Enable logging of CREATE, REMOVE, RENAME and SETATTR requests
# into access log file. Note, this option may have big performance
# impact. Available for NFSv4 only.
#
# There are three values accepted
#   NONE    : logging of access events is disabled
#   MINIMAL : logging of access events is enabled, directory id are not converted to paths
#   FULL    : logging of access events is enabled, resolve directory paths
#
(one-of?NONE|MINIMAL|FULL)nfs.enable.access-log=NONE


#  ---- Support for inotify events
nfs.inotify-generation.enable = \
    ${dcache.inotify-generation.enable}
nfs.inotify-generation.backlog.initial = \
    ${dcache.inotify-generation.backlog.initial}
nfs.inotify-generation.backlog.per-door = \
    ${dcache.inotify-generation.backlog.per-door}
nfs.inotify-generation.message-batch-size = \
    ${dcache.inotify-generation.message-batch-size}

(obsolete)nfs.db.dialect=Not used any more
(obsolete)nfs.cell.export = See nfs.cell.consume
(obsolete)nfs.cell.limits.message.threads.max = See nfs.cell.max-message-threads
(obsolete)nfs.cell.limits.message.queue.max = See nfs.cell.max-message-queues
(obsolete)nfs.pnfs.layouts = Use `lt=` option in export file


#  ---- Kafka service enabled
#
(one-of?true|false|${dcache.enable.kafka})nfs.enable.kafka = ${dcache.enable.kafka}

# Kafka topic name
nfs.kafka.topic = ${dcache.kafka.topic}

# A list of host/port pairs (brokers) host1:port1,host2:port2,....
nfs.kafka.producer.bootstrap.servers =  ${dcache.kafka.bootstrap-servers}


# ---- The location of client DB for reboot recovery
#
#
nfs.clientdb.location=${dcache.paths.nfs}

(prefix)nfs.kafka.producer.configs =  Configuration for Kafka Producer
