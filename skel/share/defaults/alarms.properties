#  -----------------------------------------------------------------------
#     Default values for embedded alarm server
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

#  ---- Cell name of the alarm service
#
alarms.cell.name=alarms

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other services can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
alarms.cell.consume=${alarms.cell.name}

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
(immutable)alarms.cell.replicable = false

#  ---- Host on which this service is running
alarms.net.host=${dcache.log.server.host}

#  ---- TCP port the alarms service listens on
alarms.net.port=${dcache.log.server.port}

#  ---- Main alarms area
#
alarms.dir=@dcache.paths.alarms@

#  ---- Server root log level.
#
(one-of?off|error|warn|info|debug)alarms.log.root-level=warn

#  ---- Server side file for recording customized priority mappings
#       written as a simple properties file.
#
alarms.priority-mapping.path=${alarms.dir}/alarms-priority.properties

#  ---- Default value to give to alarm priority
#
(one-of?critical|high|moderate|low)alarms.priority-mapping.default=critical

#  ---- Concurrency.  Number of worker threads for processing incoming
#       logging events.
#
alarms.limits.workers=1

#  ---- Concurrency.  Number of threads to handle request messages.
#
alarms.limits.message-threads=5

#  ---- Maximum size of waiting queue. When exceeded, events are discarded.
#	A conservative estimate of the needed memory would be 128Mb for
#	every 1000 queue slots.  Hence for the default setting given here,
#	at least 1Gb of heap space should be allotted to the JVM.
#
alarms.limits.queue-size=10000

#  ---- SMTP email forwarding property
#
#      Whether or not to send email alerts of alarms.
#      If this property is false, the email appender will be skipped.
#
#      If you wish alarms to be sent as email, you will need to configure
#      the following SMTP email properties.  For further information,
#      see also http://logback.qos.ch/manual/appenders.html.
#
(one-of?true|false)alarms.enable.email=false

#  ---- SMTP email forwarding property
#
#      The host name of the SMTP server. This parameter is mandatory
#      if email is enabled.
#
alarms.email.smtp-host=

#  ---- SMTP email forwarding property
#
#      The port where the SMTP server is listening.
#
#      Internally set default is also 25.
#
alarms.email.smtp-port=25

#  --------------------------------------------------------------------------
#       SMTP email authentication and encryption
#
#       The SMTP client used by dCache supports authentication via plain
#       user passwords as well as both the STARTTLS and SSL protocols.
#       Note that STARTTLS differs from SSL in that, in STARTTLS,
#       the connection is initially non-encrypted and only after the
#       STARTTLS command is issued by the client (if the server supports it)
#       does the connection switch to SSL. In SSL mode, the connection is
#       encrypted right from the start. Which of these to use is usually
#       determined by the server.
#
#       If username and password are left undefined, unauthenticated sends
#       will be attempted, which may not be supported by the server.
#  --------------------------------------------------------------------------

#  ---- SMTP email forwarding property
#
#      If this parameter is set to true, then this appender will issue the
#      STARTTLS command (if the server supports it) causing the connection
#      to switch to SSL. Note that the connection is initially non-encrypted.
#
#      Internally set default is also false.
#
alarms.email.start-tls=false

#  ---- SMTP email forwarding property
#
#      If this parameter is set to true, then this appender will open an
#      SSL connection to the server.
#
#      Internally set default is also false.
#
alarms.email.ssl=false

#  ---- SMTP email forwarding property
#
#      The username value to use during plain user/password authentication.
#      Internal default is also undefined.
#
alarms.email.user=

#  ---- SMTP email forwarding property
#
#      The password value to use for plain user/password authentication.
#      Internal default is also undefined.
#      NOTE:  while using SSL will guarantee encryption over the wire,
#      there is currently no way of storing an encrypted password in this file.
#
#      Two possible workarounds to this:
#
#          a.  Set up an admin account with a plaintext password that
#              is protected by root privileges but which can be shared among
#              adminstrators or those with access to the host containing this
#              file;
#
#          b.  Set up a host-based authentication to the server; the email
#              admin will usually require the client IP, and it will need
#              to be static in that case.
#
alarms.email.password=

#  ---- SMTP email forwarding property
#
#      A comma-separated list of recipient email addresses.
#
alarms.email.to=

#  ---- SMTP email forwarding property
#
#      The originator of the email messages sent. If you wish to include the
#      sender's name, then use the format "John Q. Public<public@example.org>".
#
alarms.email.from=

#  ---- SMTP email forwarding property
#
#      Subject of the email sent.
#
alarms.email.subject=dCache Alarm

#  ---- SMTP email forwarding property
#
#      The client buffers outgoing alarms.  The max number of alarms in
#      given message is determined by the buffer size, which has an upper
#      limit of 256.  This is the internal default.  It is set to 1
#      here to enforce a single alarm per email message.
#
alarms.email.buffer-size=1

#  ---- Level of priority serving as threshold for sending an email
#       notification.  All alerts at this level or above trigger an email.
(one-of?critical|high|medium|low)alarms.email.threshold=critical

#  ---- Pattern to use to encode email alert.
#
alarms.email.encoding-pattern=%d{dd MMM yyyy HH:mm:ss} %X{type} \\(%X{host}\\)\\(%X{service}\\)\\(%X{domain}\\)\\(%X{org.dcache.ndc}\\) %m%n

#  ---- Defines what kind of database (currently either XML or Postgres)
#       "off" deactivates all attempted connections to the store
#
(one-of?off|xml|rdbms)alarms.db.type=off

# ---- XML database
#
#   default implementation of alarms storage uses an XML DataNucleus
#   plugin; this path defines the location of the XML file
#
alarms.db.xml.path = ${alarms.dir}/store.xml

# ---- RDBMS/JDBC Database host name
#
# See dcache.db.host for details.
#
alarms.db.host = ${dcache.db.host}

# ---- RDBMS/JDBC Database user name
#
alarms.db.user = ${dcache.db.user}

# ---- RDBMS/JDBC Database user password
#
alarms.db.password = ${dcache.db.password}

# ---- RDBMS/JDBC Database name
#
(immutable)alarms.db.name-when-type-is-off=
(immutable)alarms.db.name-when-type-is-xml=
(immutable)alarms.db.name-when-type-is-rdbms=alarms
alarms.db.name=${alarms.db.name-when-type-is-${alarms.db.type}}

#  ---- Make some standard paths available to the plugins
#
alarms.plugin!plugins=@dcache.paths.plugins@
alarms.plugin!etc=@dcache.paths.etc@
alarms.plugin!admin=@dcache.paths.admin@
alarms.plugin!grid-security=${dcache.paths.grid-security}
alarms.plugin!alarms=${alarms.dir}

# ---- JDBC Url
#
(immutable)alarms.db.url-when-type-is-off=off
(immutable)alarms.db.url-when-type-is-xml=xml:file:${alarms.db.xml.path}
(immutable)alarms.db.url-when-type-is-rdbms=jdbc:postgresql://${alarms.db.host}/${alarms.db.name}?targetServerType=master
alarms.db.url=${alarms.db.url-when-type-is-${alarms.db.type}}

#  -----------------------------------------------------------------------
#     The following properties control a cleaner daemon responsible
#     for deleting stale alarm entries
#  -----------------------------------------------------------------------

#     Whether to run the thread which automatically removes closed alarms
#     older than a given threshold
#
(one-of?true|false)alarms.enable.cleaner = false

#     Wait interval between successive sweeps of the cleanup daemon
#
alarms.cleaner.timeout = 7
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)alarms.cleaner.timeout.unit = DAYS

#     Interval prior to the current (wake-up) time to use in
#     determining which closed alarms to discard (all such alarms with a
#     timestamp < current - threshold will be deleted)
#
alarms.cleaner.delete-entries-before = 14
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)alarms.cleaner.delete-entries-before.unit = DAYS

# ---- CHANGELOG (Liquibase)
#
alarms.db.schema.auto=${dcache.db.schema.auto}
(immutable)alarms.db.changelog-when-type-is-off=
(immutable)alarms.db.changelog-when-type-is-xml=
(immutable)alarms.db.changelog-when-type-is-rdbms=org/dcache/alarms/db/sql/alarms.changelog-master.xml
alarms.db.schema.changelog=${alarms.db.changelog-when-type-is-${alarms.db.type}}


(prefix)alarms.db.hikari-properties = Hikari-specific properties

#  Document which TCP ports are opened
(immutable)alarms.net.ports.tcp=${alarms.net.port}

(forbidden)alarms.db.rdbms.type = Use alarms.db.url
(forbidden)alarms.custom-definitions.path=Support for server-side regex alarm definitions has been eliminated.
(forbidden)alarms.history.threshold=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.encoding-pattern=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.log-path=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.log-file.pattern=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.max-file-size=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.min-index=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.history.max-index=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.
(forbidden)alarms.db.alarms-only=Only alarms are now stored in the database, so this option is no longer supported.
(forbidden)alarms.enable.history=Only alarms are now stored in the database, so a separate file listing only alarms (history) is no longer necessary.