<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-4.xsd">
   <tc-properties>
     <property name="l2.l1reconnect.enabled " value="true" />
     <property name="l1.cachemanager.leastCount" value="4" />
   </tc-properties>



  <servers>

  <!-- The <update-check> element helps ensure that you're using the latest version of Terracotta DSO.
    Out-of-date versions trigger a message to log and standard output. -->


       <server host="terracotta-server.example.org">
         <dso-port>9510</dso-port>
       </server>
  </servers>
   <clients>
    <modules>
          <module name="tim-tomcat-5.5" version="2.0.1"/>
    </modules>
  </clients>

  <application>
    <dso>
      <!-- The following declarations tells DSO which classes should be instrumented to
      allow sharing. When the app runs under DSO, shared instances of these classes will
      broadcast changes in their state.

      A good idiom when writing an app that you intend to cluster via TC DSO is to group the
      classes you wish to share under a single package (although if you follow the MVC pattern
      this tends to happen naturally) - this way the list of classes you wish to instrument
      can be concise -->
      <instrumented-classes>
        <!-- Start by including all classes for instrumentation.
        It's more efficient to instrument only those classes that
        hold shared roots or are part of a shared root's graph -->
        <include>
          <class-expression>org.dcache.srm.request..*</class-expression>
          <honor-transient>true</honor-transient>
        </include>

        <include>
          <class-expression>org.dcache.srm.scheduler..*</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.SRMUser</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.SRMProtocol</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>diskCacheV111.srm.RequestStatus</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>diskCacheV111.srm.FileMetaData</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.FileMetaData</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>diskCacheV111.util.FileMetaData</class-expression>
          <honor-transient>true</honor-transient>
        </include>
         <include>
           <class-expression>diskCacheV111.util.FileMetaData$Permissions</class-expression>
         </include>
        <include>
          <class-expression>diskCacheV111.srm.dcache.DcacheFileMetaData</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>diskCacheV111.util.PnfsId</class-expression>
          <honor-transient>true</honor-transient>
        </include>


        <include>
          <class-expression>org.dcache.srm.v2_2.TStatusCode</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.v2_2.TFileStorageType</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.v2_2.TRetentionPolicy</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.v2_2.TRetentionPolicyInfo</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.v2_2.TAccessLatency</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.srm.v2_2TOverwriteMode</class-expression>
          <honor-transient>true</honor-transient>
        </include>


        <include>
          <class-expression>org.dcache.auth.AuthorizationRecord</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.auth.Group</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
          <class-expression>org.dcache.auth.GroupList</class-expression>
          <honor-transient>true</honor-transient>
        </include>

         <include>
           <class-expression>org.apache.axis.types.URI</class-expression>
         </include>
         <include>
           <class-expression>org.dcache.srm.v2_2.TMetaDataPathDetail</class-expression>
         </include>
         <include>
           <class-expression>org.dcache.srm.v2_2.TGroupPermission</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TReturnStatus</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TUserPermission</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TGroupPermission</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TPermissionMode</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TFileType</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.ArrayOfString</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TFileLocality</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TFileStorageType</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TRetentionPolicy</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TAccessLatency</class-expression>
         </include>
         <include>
            <class-expression>org.dcache.srm.v2_2.TRetentionPolicyInfo</class-expression>
         </include>
         <include>
           <class-expression>org.dcache.srm.v2_2.TOverwriteMode</class-expression>
         </include>
         <include>
           <class-expression>org.apache.axis.types.UnsignedLong</class-expression>
         </include>

        <exclude>org.globus..*</exclude>

        <include>
          <class-expression>org.globus.util.GlobusURL</class-expression>
          <honor-transient>true</honor-transient>
        </include>
         <include>
           <class-expression>org.dcache.srm.util.SrmUrl</class-expression>
         </include>

        <!-- Exclude tomcat internals to improve performance of webapp loading -->
        <exclude>org.bouncycastle..*</exclude>
        <exclude>org.apache.coyote..*</exclude>
        <exclude>org.apache.catalina..*</exclude>
        <exclude>org.apache.jasper..*</exclude>
        <exclude>org.apache.tomcat..*</exclude>
      </instrumented-classes>

      <!-- Declare which web application context names should use DSO sessions -->
      <roots>
        <root>
          <field-name>org.dcache.srm.scheduler.SharedMemoryCacheJobStorage.sharedMemoryCache</field-name>
        </root>
      </roots>

      <locks>
        <autolock>
           <method-expression>* org.dcache.srm.scheduler.Job.*(..)</method-expression>
           <!-- note that write is the default level, so strictly speaking, it's not
                required to specify the lock-level for a write, but it's good practice
                anyway
            -->
           <lock-level>write</lock-level>
        </autolock>

        <autolock>
           <method-expression>* org.dcache.srm.request.*.*(..)</method-expression>
           <!-- note that write is the default level, so strictly speaking, it's not
                required to specify the lock-level for a write, but it's good practice
                anyway
            -->
           <lock-level>write</lock-level>
        </autolock>

      </locks>
      <transient-fields>
        <field-name>com.mycompany.pkga.MyClassOne.fieldA</field-name>
        <field-name>com.mycompany.pkgb.subpkg2.fieldB</field-name>
      </transient-fields>

      <additional-boot-jar-classes>
        <include>org.xml.sax.helpers.DefaultHandler</include>
        <include>java.lang.AbstractStringBuilder</include>
        <include>java.lang.StringBuilder</include>
        <include>java.util.TimeZone</include>
        <include>sun.util.calendar.ZoneInfo</include>
      </additional-boot-jar-classes>

    <!-- This section specifies methods to invoke in a distributed
         fashion via Terracotta DSO. When a method matching one of the
         patterns here is invoked in one JVM, Terracotta DSO will
         cause it to be invoked simultaneously in all JVMs throughout
         the Terracotta cluster. This is often used for 'event listener'
         methods (for example, those used by Swing), to make sure that
         all JVMs throughout the cluster are informed when a particular
         event occurs. -->
      <distributed-methods>
        <!-- An AspectWerkz-compatible method specification expression
           denoting which method(s) to distribute. -->
        <!-- An optional attribute run-on-all-nodes (default value "true")
           can be set to false to execute distributed only on those nodes
           that already have a reference to the object on which the method
           is called -->
        <method-expression run-on-all-nodes="false">
          void org.dcache.srm.scheduler.Job.tryToReady()
        </method-expression>
        <method-expression run-on-all-nodes="false">
          void org.dcache.srm.scheduler.Job.notifySchedulerOfStateChange(..)
        </method-expression>
      </distributed-methods>


     </dso>
  </application>

</tc:tc-config>
